{"name":"Chainweaver Bracer v1","type":"equipment","img":"modules/boss-loot-magic-items-free/artwork/003-chainweaver-bracer/art-static-chainweaver-bracer.webp","system":{"description":{"value":"<p><em>Wondrous item, (requires attunement)</em></p><div class=\"block purple\" id=\" \" style=\"background:#aa88aa55\"><p><em>“With a commanding gesture and a wave of her hand, the elven adventurer pointed her bracer at the imposing figure blocking the door. A shining chain burst forth from the magical bracer and with a crack of energy, wrapped around the figure, dragging him to the ground with a loud thump. \"Let's have a conversation,\" she said calmly.”</em></p></div><hr /><p>This bracer is made of a dark metal, with a single gem affixed to the top of it. A magical chain can be seen coiled around the bracer, the links shimmering with a faint magical energy. When the gem is pressed, the chain extends out from the bracer, allowing the user to grab and pull a creature toward them.</p><hr /><p>This item has 2 charges. It regains expended charges after a short rest. As an action, you can expend 1 charge to use the bracer chain to attempt to grab and pull a creature 40 feet away toward you. You make a Strength (Athletics) check contested by the target's Strength (Athletics) or Dexterity (Acrobatics) check (the target chooses the ability to use). If you succeed, the target is @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.cSVcyZyNe2iG1fIc]{Restrained} until the start of your next turn.</p><img src=\"modules/boss-loot-magic-items-free/artwork/003-chainweaver-bracer/art-static-chainweaver-bracer.webp\" /><hr /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":1,"price":{"value":0,"denomination":"gp"},"attunement":1,"equipped":false,"rarity":"veryRare","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":1,"width":null,"units":"ft","type":"radius"},"range":{"value":40,"long":40,"units":"ft"},"uses":{"value":2,"max":"2","per":"sr","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":"","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":null,"type":"clothing","dex":null},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"baseItem":"","speed":{"value":null,"conditions":""},"strength":0,"stealth":false,"proficient":true},"effects":[],"flags":{"midi-qol":{"effectActivation":false,"onUseMacroName":"[templatePlaced]ItemMacro"},"itemacro":{"macro":{"name":"Chainweaver Bracer v1","type":"script","scope":"global","command":"const orgName = \"Boss Loot\";\nconst itemName = \"Chainweaver Bracer\";\nconst effectName = \"Holding Chain (Temporrary Effect)\";\nconst info = args[0];\nconst targetTokens = info.targets;\nconst targetUuid = info.targetUuids;\nconst usesCount = info.itemData.system.uses.value;\nconst permittedSize = [\"tiny\", \"sm\", \"med\"];\nconst artWorkChatTitle = \"modules/boss-loot-magic-items-free/artwork/003-chainweaver-bracer/art-static-chainweaver-bracer.webp\";\nconst artWorkChatCardChainhookBracer = \"modules/boss-loot-magic-items-free/artwork/003-chainweaver-bracer/art-animated-for-chat-chainweaver-bracer.gif\";\nconst artworkHoldingChainEffect = \"modules/boss-loot-magic-items-free/artwork/003-chainweaver-bracer/art-static-holding-chain-effect.webp\";\n\n//------------------------\n// F U N C T I O N S\n//-----------\nasync function returnOneUse() {\n  await actor.items.get(info.item._id).update({ \"system.uses.value\": usesCount + 1 });\n}\n\nasync function createChatMessage(summary, msg, img = true) {\n  const artwork = img ? `<img src=${artWorkChatCardChainhookBracer} title=${itemName} width=\"272\" height=\"272\" />` : \"\";\n  const chatChainhookBracer = {\n    content: `\n<div class=\"dnd5e chat-card item-card midi-qol-item-card\">\n  <header class=\"card-header flexrow\">\n    <img src=${artWorkChatTitle} title=\"${itemName}\" width=\"36\" height=\"36\" />\n    <h3 class=\"item-name\">${itemName} - ${summary}</h3>\n  </header>\n  <div class=\"card-content\">\n    ${msg}\n  </div>\n  <hr>\n    ${artwork}\n  <footer class=\"card-footer\"><span>${itemName}</span></footer>\n</div>`,\n    type: CONST.CHAT_MESSAGE_TYPES.OOC,\n  };\n  await ChatMessage.create(chatChainhookBracer);\n}\n\nfunction failChainEffect() {\n  new Sequence()\n    .effect()\n    .file(\"jb2a.bullet.Snipe.blue\")\n    .filter(\"ColorMatrix\", { hue: 135, brightness: 1, contrast: 0, saturate: 0 })\n    .template({ gridSize: 200, startPoint: 200, endPoint: 200 })\n    .attachTo(token)\n    .stretchTo(targetToken)\n    .effect()\n    .file(\"modules/sequencer/samples/Bindings/chain.png\")\n    .tint(\"#353935\")\n    .filter(\"ColorMatrix\", { hue: 135, brightness: 1, contrast: 0, saturate: 0 })\n    .attachTo(token)\n    .stretchTo(targetToken, { attachTo: true, tiling: true })\n    .scale(0.15)\n    .belowTokens()\n    .play();\n}\n\n//------------------------\n// P R E - C H E C K S\n//-----------\n\n// Delete the Template\nawait canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [info.templateId]);\n\nif (targetTokens.length !== 1) {\n  await returnOneUse();\n  console.log(`${orgName} | Please select one target to pull`);\n  ui.notifications.warn(`Please select one target to pull!`);\n  return;\n}\n\nif (targetUuid && targetUuid.includes(token.document.uuid)) {\n  await returnOneUse();\n  console.log(`${orgName} | Cannot use the item ${itemName} on yourself`);\n  ui.notifications.warn(`Cannot use the item ${itemName} on yourself!`);\n  return;\n}\n\n// Check the distance\nlet success = false;\nconst [targetToken] = targetTokens; // TokenDocument\nconst targetX = targetToken.x;\nconst targetY = targetToken.y;\nconst myTokenX = token.document.x;\nconst myTokenY = token.document.y;\nconst units = canvas.scene.grid.units;\nconst ray = new Ray({ x: myTokenX, y: myTokenY }, { x: targetX, y: targetY });\nconst [distanceFeet] = canvas.grid.measureDistances([{ ray }], { gridSpaces: true });\n\nif (distanceFeet > 40) {\n  await returnOneUse();\n  console.log(`${orgName} | Please target a token in a 40 feet range`);\n  ui.notifications.warn(`Please target a token in a 40 feet range!`);\n  return;\n}\n\n//------------------------\n// M A I N\n//-----------\n\nconst holdingChainEffect = {\n  label: effectName,\n  icon: artworkHoldingChainEffect,\n  duration: {\n    rounds: 1,\n    startTime: null,\n    seconds: null,\n    combat: null,\n    turns: null,\n    startRound: null,\n    startTurn: null,\n  },\n  disabled: false,\n  changes: [],\n  tint: null,\n  transfer: false,\n  flags: {\n    effectmacro: {\n      onDelete: {\n        script: `// Delete Seq Effects\\nSequencer.EffectManager.endEffects({ name: \"Chainhook-Bracer-Chain\" });\\n\\n// Delete Restrained effect from target\\nconst hasEffectApplied = game.dfreds.effectInterface.hasEffectApplied(\"Restrained\", \"${targetToken.uuid}\");\\nif (hasEffectApplied) {\\n  game.dfreds.effectInterface.removeEffect({ effectName: \"Restrained\", uuid: \"${targetToken.uuid}\" });\\n  console.log(\\`${orgName} | \"Restrained\" effect removed from ${targetToken.name}\\`);\\n}\\n`,\n      },\n    },\n  },\n};\n\n// Check the size\nconst targetSize = targetToken.actor.system?.traits?.size;\nconst isProperSize = permittedSize.includes(targetSize.toLowerCase());\nif (!isProperSize) {\n  failChainEffect();\n  const textToChat = `<p>You extend the <strong>${itemName}'s</strong> magic chain towards the <strong>${targetToken.name}</strong>, but it's too massive and powerful, the chain struggles to even reach it, let alone pull it towards you. The creature looks at you with contempt as it remains in its place.</p>`;\n  await createChatMessage(\"FAIL\", textToChat, false);\n  return;\n}\n\nif (targetToken.disposition === CONST.TOKEN_DISPOSITIONS.FRIENDLY) {\n  const content = `<div class=\"dnd5e chat-card item-card midi-qol-item-card\">\n  <header class=\"card-header flexrow\">\n    <img src=\"${artWorkChatTitle}\" title=\"${itemName}\" width=\"36\" height=\"36\" />\n    <h3 class=\"item-name\">${itemName}</h3>\n  </header>\n  <div class=\"card-content\">\n    <p><span style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Black}\">The ${itemName} hums with magic as you consider using it to pull your friend to safety.</span></p>\n    <p><span style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Black}\">Is your friend willing to be pulled?</span></p>\n    <br>\n  </div>\n  </div>`;\n  // Ask\n  new Dialog({\n    title: \"Atempt to pull a friendly\",\n    content,\n    buttons: {\n      Yes: {\n        label: `Yes`,\n        callback: async () => main(true),\n      },\n      No: {\n        label: `No`,\n        callback: async () => main(false),\n      },\n    },\n  }).render(true);\n} else {\n  main(false);\n}\n\nasync function main(isWilling) {\n  //Begin contested Roll check\n  if (!isWilling) {\n    const targetSkill = targetToken.actor.system.skills.acr.mod > targetToken.actor.system.skills.ath.mod ? \"acr\" : \"ath\";\n\n    const target_roll = await targetToken.actor.rollSkill(targetSkill, { fastForward: true, rollMode: \"blindroll\" });\n    const main_roll = await actor.rollSkill(`ath`, { fastForward: true, flavor: `Athletics contested check : <strong>DC ${target_roll.total}</strong>` });\n\n    // Check for success\n    success = main_roll.total >= target_roll.total;\n  } else {\n    success = true;\n  }\n\n  if (!success) {\n    failChainEffect();\n    const textToChat = `<p>You extend the <strong>${itemName}'s</strong> magic chain towards the <strong>${targetToken.name}</strong>, with a quick and precise movement, but it manages to dodge and evade the chain's grasp, remaining out of reach.</p>`;\n    await createChatMessage(\"FAIL\", textToChat, false);\n    return;\n  }\n\n  // Chain Effect\n  new Sequence()\n    .effect()\n    .file(\"jb2a.bullet.Snipe.blue\")\n    .filter(\"ColorMatrix\", { hue: 135, brightness: 1, contrast: 0, saturate: 0 })\n    .template({ gridSize: 200, startPoint: 200, endPoint: 200 })\n    .attachTo(token)\n    .stretchTo(targetToken)\n    .effect()\n    .file(\"modules/sequencer/samples/Bindings/chain.png\")\n    .tint(\"#353935\")\n    .filter(\"ColorMatrix\", { hue: 135, brightness: 1, contrast: 0, saturate: 0 })\n    .attachTo(token)\n    .stretchTo(targetToken, { attachTo: true, tiling: true })\n    .scale(0.15)\n    .belowTokens()\n    .waitUntilFinished(-400)\n    .effect()\n    .file(\"modules/sequencer/samples/Bindings/chain.png\")\n    .tint(\"#353935\")\n    .filter(\"ColorMatrix\", { hue: 135, brightness: 1, contrast: 0, saturate: 0 })\n    .name(\"Chainhook-Bracer-Chain\")\n    .attachTo(token)\n    .stretchTo(targetToken, { attachTo: true, tiling: true })\n    .scale(0.15)\n    .belowTokens()\n    .persist()\n    .effect()\n    .file(\"jb2a.markers.chain.standard.loop.02.red\")\n    .name(\"Chainhook-Bracer-Chain\")\n    .filter(\"ColorMatrix\", { hue: 125, brightness: 1, contrast: 1, saturate: 0 })\n    .attachTo(targetToken)\n    .scaleToObject(1.5)\n    .persist()\n    .wait(500)\n    .animation()\n    .on(targetToken)\n    .moveTowards(token, { ease: \"easeOutCirc\" })\n    .moveSpeed(10)\n    .closestSquare()\n    .async()\n    .play();\n\n  // Create the Holding Chain effect\n  await actor.createEmbeddedDocuments(\"ActiveEffect\", [holdingChainEffect]);\n\n  // Add Restrained effect\n  await game.dfreds.effectInterface.addEffect({ effectName: \"Restrained\", uuid: targetToken.uuid });\n\n  const textToChat = `<p>With a swift flick of your wrist, the <strong>${itemName}</strong> extends its magic chain towards the <strong>${targetToken.name}</strong>, latching onto it with a loud clink. The creature stumbles and is pulled towards you with a force, its eyes widen in surprise as it struggles to break free but to no avail.</p>`;\n  createChatMessage(\"SUCCESS\", textToChat);\n}","author":"Iz3BYZWrVGwLMHiJ","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}},"core":{"sourceId":"Item.PQ2nmton7QGAHz9h"},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.5"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1673374302823,"modifiedTime":1682613335653,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"4HNlcHgzfYEIQHdN","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
{"name":"Void Vortex v1","type":"weapon","img":"modules/boss-loot-magic-items-free/artwork/002-void-vortex/art-static-void-vortex.webp","system":{"description":{"value":"<p><em>Weapon (longbow), very rare (requires attunement)</em></p><div class=\"block purple\" id=\"book\" style=\"background:#aa88aa55\"><p><em>“</em><span data-text=\"true\"><em>You unleash a searing arrow of energy that slams into the ground. A swirling vortex of black and purple energy erupts from the point of impact, tearing apart the very fabric of reality and engulfing your foes in a maelstrom of force. Those who fail to escape its grasp are dragged towards it and rendered helpless before the void's consuming power.</em></span><em>”</em></p></div><hr /><p>You gain a +1 bonus to attack and damage rolls made with this magic weapon.</p><hr /><p><strong>Infinite Arrows</strong>: You do not require ammunition for firing this bow. The arrows are magical and deal force damage.</p><p><strong>Vortex Arrow (Active Ability)</strong>: As an action, you must say the activation phrase \"<span class=\"ryNqvb\"><strong>The Void of the Universe will consume you!</strong></span><strong>\"</strong>, you can materialize a vortex arrow. Choose a point within the weapon's normal range where the arrow will land. The arrow causes gravity to collapse, creating a vortex that lasts until the start of your next turn, dealing [[/r 6d8 Force]] damage in a 20 feet radius and forcing each creature within to make a Dexterity Saving Throw with a DC equal to your Spellcasting ability. On a fail save the creature is pulled towards the point of impact and is @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated} until the start of your next turn. Those who succeeded the Saving Throw will take <span style=\"font-family:Signika, sans-serif\">half as much damage and they will not get </span>@UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated}.</p><p><span class=\"ryNqvb\">After using this ability, the bow will enter a state of chaotic vibration and you will not be able to use \"Vortex Arrow\" ability until a day has passed.</span></p><img src=\"modules/boss-loot-magic-items-free/artwork/002-void-vortex/art-static-void-vortex.webp\" /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":2,"price":{"value":0,"denomination":"gp"},"attunement":1,"equipped":false,"rarity":"legendary","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":150,"long":600,"units":"ft"},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"rwak","attackBonus":"1","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["1d8 + @mod +1","piercing"]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"martialR","baseItem":"longbow","properties":{"amm":true,"hvy":true,"two":true,"fin":false,"fir":false,"foc":false,"lgt":false,"rch":false,"rel":false,"ret":false,"spc":false,"thr":false,"ver":false,"lod":false,"mgc":true,"ada":false,"sil":false},"proficient":false},"effects":[{"label":"Void Vortex (do not touch this)","icon":"modules/boss-loot-magic-items-free/artwork/002-void-vortex/art-static-void-vortex.webp","origin":"Item.TAEV8HgGIvGIZWdi","duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"disabled":false,"_id":"Fk2RkZ6o6CC1X3wb","changes":[],"tint":null,"transfer":true,"flags":{"times-up":{},"dfreds-convenient-effects":{"description":""},"dae":{"selfTarget":false,"selfTargetAlways":false,"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[]},"core":{"statusId":""},"ActiveAuras":{"isAura":false,"aura":"None","radius":"undefined","alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false},"effectmacro":{"onDelete":{"script":"const featName = \"Vortex Arrow (Active Ability)\";\n\nlet myItems = actor.items;\n\n// Remove the item from item list\nmyItems.forEach(function (item) {\n  item.name === featName && item.type === \"feat\" && actor.deleteEmbeddedDocuments(\"Item\", [item.id]);\n});\n"},"onDisable":{"script":"const featName = \"Vortex Arrow (Active Ability)\";\n\nlet myItems = actor.items;\n\n// Remove the item from item list\nmyItems.forEach(function (item) {\n  item.name === featName && item.type === \"feat\" && actor.deleteEmbeddedDocuments(\"Item\", [item.id]);\n});\n"},"onEnable":{"script":"const orgName = \"Boss Loot\";\nconst featName = \"Vortex Arrow (Active Ability)\";\nconst featArtwork = \"modules/boss-loot-magic-items-free/artwork/002-void-vortex/art-static-gravity-distortion-effect.webp\";\n\nlet myItems = actor.items;\nlet featExists = false;\n\nmyItems.forEach(function (item) {\n  if (item.name === featName && item.type === \"feat\") {\n    console.log(`${orgName} | A feature with name Vortex Arrow already exists`);\n    featExists = true;\n  }\n});\n\nif (!featExists) {\n  const voidVortexFeat = {\n    name: featName,\n    type: \"feat\",\n    img: featArtwork,\n    system: {\n      description: {\n        value:\n          '<p><strong>Vortex Arrow (Active Ability)</strong>: As an action, you must say the activation phrase \"<span class=\"ryNqvb\"><strong>The Void of the Universe will consume you!</strong></span><strong>\"</strong>, you can materialize a vortex arrow. Choose a point within the weapon\\'s normal range where the arrow will land. The arrow causes gravity to collapse, creating a vortex that lasts until the start of your next turn, dealing [[/r 6d8 Force]] damage in a 20 feet radius and forcing each creature within to make a Dexterity Saving Throw with a DC equal to your Spellcasting ability. On a fail save the creature is pulled towards the point of impact and is @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated} until the start of your next turn. Those who succeeded the Saving Throw will take <span style=\"font-family:Signika, sans-serif\">half as much damage and they will not get </span>@UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated}.</p><p><span class=\"ryNqvb\">After using this ability, the bow will enter a state of chaotic vibration and you will not be able to use \"Vortex Arrow\" ability until a day has passed.</span></p>',\n        chat: \"\",\n        unidentified: \"\",\n      },\n      source: \"\",\n      activation: {\n        type: \"action\",\n        cost: 1,\n        condition: \"\",\n      },\n      duration: {\n        value: 1,\n        units: \"round\",\n      },\n      target: {\n        value: 20,\n        width: null,\n        units: \"ft\",\n        type: \"radius\",\n      },\n      range: {\n        value: 150,\n        long: 600,\n        units: \"ft\",\n      },\n      uses: {\n        value: 1,\n        max: \"1\",\n        per: \"lr\",\n        recovery: \"\",\n      },\n      consume: {\n        type: \"\",\n        target: \"\",\n        amount: null,\n      },\n      ability: \"\",\n      actionType: \"save\",\n      attackBonus: \"0\",\n      chatFlavor: \"\",\n      critical: {\n        threshold: null,\n        damage: \"\",\n      },\n      damage: {\n        parts: [[\"6d8\", \"force\"]],\n        versatile: \"\",\n      },\n      formula: \"\",\n      save: {\n        ability: \"dex\",\n        dc: null,\n        scaling: \"spell\",\n      },\n      requirements: \"\",\n      recharge: {\n        value: null,\n        charged: false,\n      },\n    },\n    effects: [\n      {\n        label: \"Gravity Distortion Effect\",\n        icon: featArtwork,\n        duration: {\n          rounds: 1,\n          startTime: null,\n          seconds: null,\n          combat: null,\n          turns: null,\n          startRound: null,\n          startTurn: null,\n        },\n        disabled: false,\n        changes: [\n          {\n            key: \"macro.CE\",\n            mode: 0,\n            value: \"Incapacitated\",\n            priority: 20,\n          },\n        ],\n        tint: null,\n        transfer: false,\n        flags: {\n          \"times-up\": {},\n          dae: {\n            selfTarget: false,\n            selfTargetAlways: false,\n            stackable: \"none\",\n            durationExpression: \"\",\n            macroRepeat: \"none\",\n            specialDuration: [],\n          },\n          core: {\n            statusId: \"\",\n          },\n          effectmacro: {\n            onCreate: {\n              script:\n                'const myToken = arguments[0];\\nconst myTokenId = myToken.document._id;\\nconst myActiveEffects = arguments[5];\\nconst sourceTemplateId = myActiveEffects.origin;\\nconst templates = canvas.scene.templates;\\n\\nlet twisting = [\\n  {\\n    filterType: \"transform\",\\n    filterId: \"theMooManDance\",\\n    twRadiusPercent: 70,\\n    bpRadiusPercent: 90,\\n    padding: 50,\\n    animated: {\\n      twRotation: {\\n        animType: \"sinOscillation\",\\n        val1: -90,\\n        val2: +90,\\n        loopDuration: 9000,\\n      },\\n      bpStrength: {\\n        animType: \"cosOscillation\",\\n        val1: 0.0,\\n        val2: 0.0,\\n        loopDuration: 1000,\\n      },\\n      translationX: {\\n        animType: \"sinOscillation\",\\n        val1: -0.1,\\n        val2: +0.1,\\n        loopDuration: 6000,\\n      },\\n      translationY: {\\n        animType: \"cosOscillation\",\\n        val1: -0.1,\\n        val2: +0.1,\\n        loopDuration: 6000,\\n      },\\n      rotation: {\\n        animType: \"cosOscillation\",\\n        val1: 0,\\n        val2: -45,\\n        loopDuration: 12000,\\n      },\\n    },\\n  },\\n  {\\n    filterType: \"blur\",\\n    filterId: \"myBlur\",\\n    padding: 10,\\n    quality: 4.0,\\n    blur: 0,\\n    blurX: 0,\\n    blurY: 0,\\n    animated: {\\n      blurX: {\\n        active: true,\\n        animType: \"syncCosOscillation\",\\n        loopDuration: 500,\\n        val1: 0,\\n        val2: 6,\\n      },\\n      blurY: {\\n        active: true,\\n        animType: \"syncCosOscillation\",\\n        loopDuration: 750,\\n        val1: 0,\\n        val2: 6,\\n      },\\n    },\\n  },\\n  {\\n    filterType: \"distortion\",\\n    filterId: \"myDistortion\",\\n    maskPath: \"modules/tokenmagic/fx/assets/distortion-1.png\",\\n    maskSpriteScaleX: 20,\\n    maskSpriteScaleY: 20,\\n    padding: 20,\\n    animated: {\\n      maskSpriteX: {\\n        active: true,\\n        speed: 0.05,\\n        animType: \"move\",\\n      },\\n      maskSpriteY: {\\n        active: true,\\n        speed: 0.05,\\n        animType: \"move\",\\n      },\\n    },\\n  },\\n  {\\n    filterType: \"wave\",\\n    filterId: \"myShockwave\",\\n    time: 0,\\n    strength: 0.03,\\n    frequency: 15,\\n    maxIntensity: 4.0,\\n    minIntensity: 0.5,\\n    padding: 25,\\n    animated: {\\n      time: {\\n        active: true,\\n        speed: 0.0045,\\n        animType: \"move\",\\n      },\\n    },\\n  },\\n];\\n\\nTokenMagic.addUpdateFilters(token, twisting);\\n\\n// Get center of the template\\nlet newX, newY;\\nlet randomizeX = Math.floor(Math.random() * 150);\\nlet randomizeY = Math.floor(Math.random() * 150);\\ntemplates.forEach(function (templ) {\\n  const org = templ.flags?.dnd5e?.origin;\\n  if (org === sourceTemplateId) {\\n    newX = templ.x;\\n    newY = templ.y;\\n  }\\n});\\n\\nconst newTokenPos = [{ _id: myTokenId, x: newX - randomizeX, y: newY - randomizeY }];\\nawait canvas.scene.updateEmbeddedDocuments(\"Token\", newTokenPos, { animate: true });\\n',\n            },\n            onDelete: {\n              script: 'await token.TMFXdeleteFilters(\"theMooManDance\");\\nawait token.TMFXdeleteFilters(\"myBlur\");\\nawait token.TMFXdeleteFilters(\"myDistortion\");\\nawait token.TMFXdeleteFilters(\"myShockwave\");\\n\\n',\n            },\n          },\n        },\n        origin: null,\n      },\n    ],\n    flags: {\n      \"midi-qol\": {\n        fumbleThreshold: null,\n        effectActivation: false,\n        onUseMacroName: \"[templatePlaced]ItemMacro\",\n      },\n      itemacro: {\n        macro: {\n          name: \"Vortex Arrow (Active Ability)\",\n          type: \"script\",\n          scope: \"global\",\n          command:\n            'const info = args[0];\\nconst templ = canvas.scene.templates.get(info.templateId);\\nconst chatMessage = game.messages.get(info.itemCardId);\\nconst chatMessageContent = chatMessage.content;\\nconst textToAppend = \\'<hr><img src=\"modules/boss-loot-magic-items-free/artwork/002-void-vortex/art-animated-for-chat-vortex-arrow.gif\" width=\"272\" height=\"272\"/>\\';\\n\\nconst parser = new DOMParser();\\nconst doc = parser.parseFromString(chatMessageContent, \"text/html\");\\nconst cardContent = doc.querySelector(\".card-content\");\\ncardContent.insertAdjacentHTML(\"beforeend\", textToAppend);\\nconst result = doc.documentElement.outerHTML;\\nchatMessage.content = result;\\nawait chatMessage.update();\\n\\nnew Sequence()\\n  .effect()\\n  .file(\"jb2a.arrow.physical.blue\")\\n  .atLocation(token)\\n  .stretchTo(templ)\\n  .template({ gridSize: 200, startPoint: 200, endPoint: 200 }) //jb2a defaults center token to center target\\n  .waitUntilFinished()\\n  .effect()\\n  .file(\"jb2a.explosion.03.blueyellow\")\\n  .atLocation(templ)\\n  .scaleToObject()\\n  .effect()\\n  .file(\"jb2a.sphere_of_annihilation.600px.purple\")\\n  .name(`VoidVortexBlackHole`)\\n  .atLocation(templ)\\n  .scaleToObject()\\n  .belowTokens()\\n  .fadeIn(300, { ease: \"easeInSine\" })\\n  .persist()\\n  .tieToDocuments(templ)\\n  .play();',\n          _id: null,\n          img: \"icons/svg/dice-target.svg\",\n          folder: null,\n          sort: 0,\n          ownership: {\n            default: 0,\n          },\n        },\n      },\n    },\n  };\n  actor.createEmbeddedDocuments(\"Item\", [voidVortexFeat]);\n}\n"}}}}],"flags":{"core":{"sourceId":"Compendium.dnd5e.items.A2i08i8gAFscm6hZ"},"midi-qol":{"fumbleThreshold":null,"effectActivation":false,"onUseMacroName":"[preAttackRoll]ItemMacro"},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false,"autoFailFriendly":false,"offHandWeapon":false,"autoSaveFriendly":false},"scene-packer":{"sourceId":"Item.z3KhKo7zFMvztrYd"},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.4"},"itemacro":{"macro":{"name":"Void Vortex v1","type":"script","scope":"global","command":"let targets = Array.from(game.user.targets);\n\nfor (let target of targets) {\n  new Sequence().effect().file(\"jb2a.arrow.physical.blue\").atLocation(token).stretchTo(target).play();\n}","author":"Iz3BYZWrVGwLMHiJ","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1682265179760,"modifiedTime":1682613593084,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"TAEV8HgGIvGIZWdi","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
{"name":"Quartus Portal Dagger v2","type":"weapon","img":"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-quartus.webp","system":{"description":{"value":"<p><em>Weapon (dagger), rare (requires attunement)</em></p><div class=\"block purple\" id=\" \" style=\"background:#aa88aa55\"><p><em>“The four ancient knives, whose power spans the planes of existence, are said to contain a secret knowledge that is older than time itself. Those who unlock their secrets will gain access to a realm of power and knowledge beyond the comprehension of mortal minds.”</em></p></div><hr /><p>You gain a +2 bonus to attack and damage rolls made with this magic weapon.</p><p>The Prime, Secundus, Tertius, and Quartus knives are powerful items, each imbued with a unique ability to open a portal to the next knife’s location. When inserted into any wall, the Prime knife will open a portal to the Secundus knife, the Secundus knife will open a portal to the Tertius knife, and so on. With the Quartus knife, the portal will take the user back to the location of the Prime knife.</p><p>A strong connection is formed between you and the dagger once the portal is opened and only you can retrieve the blade from its resting place.</p><img src=\"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-quartus.webp\" alt=\"Quartus Dagger\" /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":1,"price":{"value":0,"denomination":"gp"},"attunement":1,"equipped":false,"rarity":"veryRare","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":20,"long":60,"units":"ft"},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"mwak","attackBonus":"2","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["1d4 + @mod +2","piercing"]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":null},"hp":{"value":null,"max":null,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"dagger","properties":{"ada":false,"amm":false,"fin":true,"fir":false,"foc":false,"hvy":false,"lgt":true,"lod":false,"mgc":true,"rch":false,"rel":false,"ret":false,"sil":false,"spc":false,"thr":true,"two":false,"ver":false},"proficient":true},"effects":[{"label":"Quartus Portal Effect (do not touch this)","icon":"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-quartus.webp","origin":"Item.Tqo4TwVTa5FWrhO8","duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"disabled":false,"_id":"HIgSzcsfV2ZA4xXA","changes":[],"tint":null,"transfer":true,"flags":{"times-up":{},"dfreds-convenient-effects":{"description":"Creates the gate to Prime"},"dae":{"selfTarget":false,"selfTargetAlways":false,"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[]},"core":{"statusId":""},"ActiveAuras":{"isAura":false,"aura":"None","radius":"undefined","alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false},"effectmacro":{"onDelete":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Quartus Portal Dagger v1\";\nconst featName = \"Quartus Portal (Active Ability)\";\n\nconst quartusPortalfeat = actor.items.getName(featName);\nif (quartusPortalfeat) {\n  quartusPortalfeat.delete();\n  console.log(`${orgName} | ${featName} was deleted!`);\n} else {\n  console.log(`${orgName} | ${featName} not found`);\n}\n"},"onEnable":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Quartus Portal Dagger v2\";\nconst featName = \"Quartus Portal (Active Ability)\";\nconst itemNameNormalized = \"Quartus Portal Dagger\";\nconst nextItemNameNormalized = \"Prime\";\nlet featExists = false;\n\nactor.items.forEach(function (item) {\n  if (item.name === featName && item.type === \"feat\") {\n    console.log(`${orgName} | Feat ${featName} already exists`);\n    featExists = true;\n  }\n});\n\nif (featExists) return;\n\nconst quartusPortalfeat = {\n  name: featName,\n  type: \"feat\",\n  system: {\n    description: {\n      value: `<p>As you grip the hilt of the <strong>${itemNameNormalized}</strong>, you feel its magical energy coursing through your veins. With a flick of the wrist, you throw the blade towards the wall before you. The air shimmers and ripples, as if it were a pool of water disturbed by a stone. Suddenly, a circular portal opens before you, leading to the location of the <strong>${nextItemNameNormalized}</strong> knife. You feel a powerful bond being formed between the dagger and yourself, assuring that only you can retrieve the blade from its resting place. No matter where the <strong>${nextItemNameNormalized}</strong> knife may be, the <strong>${itemNameNormalized}</strong> serves as a guide, unlocking the path to your next destination.</p>`,\n      chat: \"\",\n      unidentified: \"\",\n    },\n    source: itemName,\n    activation: {\n      type: \"action\",\n      cost: 1,\n      condition: \"\",\n    },\n    duration: {\n      value: \"\",\n      units: \"\",\n    },\n    target: {\n      value: null,\n      width: null,\n      units: \"\",\n      type: \"\",\n    },\n    range: {\n      value: 20,\n      long: 40,\n      units: \"ft\",\n    },\n    uses: {\n      value: null,\n      max: \"\",\n      per: \"\",\n      recovery: \"\",\n    },\n    consume: {\n      type: \"\",\n      target: \"\",\n      amount: null,\n    },\n    ability: \"\",\n    actionType: \"other\",\n    attackBonus: \"\",\n    chatFlavor: \"\",\n    critical: {\n      threshold: null,\n      damage: \"\",\n    },\n    damage: {\n      parts: [],\n      versatile: \"\",\n    },\n    formula: \"\",\n    save: {\n      ability: \"\",\n      dc: null,\n      scaling: \"spell\",\n    },\n    type: {\n      value: \"feat\",\n      subtype: \"\",\n    },\n    requirements: \"\",\n    recharge: {\n      value: null,\n      charged: false,\n    },\n  },\n  img: \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-quartus-ability.webp\",\n  effects: [],\n  folder: null,\n  sort: 0,\n  flags: {\n    \"midi-qol\": {\n      effectActivation: false,\n      onUseMacroName: \"[templatePlaced]ItemMacro\",\n    },\n    itemacro: {\n      macro: {\n        name: \"Quartus Portal (Active Ability)\",\n        type: \"script\",\n        scope: \"global\",\n        command:\n          'const orgName = \"Boss Loot\";\\nconst itemName = \"Quartus Portal Dagger v2\";\\nconst itemNameNormalized = \"Quartus Portal Dagger\";\\nconst nextItemName = \"Prime Portal Dagger\";\\nconst portalName = \"Quartus Portal\";\\nconst portalId = \"Quartus-Portal\";\\nconst nextPortalId = \"Prime-Portal\";\\nconst info = args[0];\\nconst chatMessage = game.messages.get(info.itemCardId);\\nconst chatMessageContent = chatMessage.content;\\nconst distanceAvailable = info.item.system.range.long;\\nconst artWorkChatTitle = \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-quartus.webp\";\\nconst artWorkChatCardStormforgerStaff = \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-animated-for-chat-portal-dagger-quartus.gif\";\\nconst textToAppend = \\'<hr><img src=\"\\' + artWorkChatCardStormforgerStaff + \\'\" width=\"272\" height=\"272\"/>\\';\\n\\nconst abilitySelection = `<div class=\"dnd5e chat-card item-card midi-qol-item-card\">\\n    <header class=\"card-header flexrow\">\\n      <img src=\"${artWorkChatTitle}\" title=\"${itemNameNormalized}\" width=\"36\" height=\"36\" />\\n      <h3 class=\"item-name\">${itemNameNormalized}</h3>\\n    </header>\\n    <div class=\"card-content\">\\n      <p style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Bold}\">Do you want to enter in portal or pull the dagger and close the portal?</p>\\n      <br />\\n    </div>\\n    </div>`;\\n\\n//------------------------\\n// F U N C T I O N S\\n//-----------\\nfunction isPointInSquare(point, tokenDocument) {\\n  const gridSize = canvas.scene.grid.size;\\n  const h = tokenDocument.height * gridSize;\\n  const w = tokenDocument.width * gridSize;\\n  const { x: x0, y: y0 } = point;\\n  const { x: x1, y: y1 } = tokenDocument;\\n  const x2 = tokenDocument.x + w;\\n  const y2 = tokenDocument.y;\\n  const x3 = tokenDocument.x + w;\\n  const y3 = tokenDocument.y + h;\\n  const x4 = tokenDocument.x;\\n  const y4 = tokenDocument.y + h;\\n\\n  const minX = Math.min(x1, x2, x3, x4);\\n  const maxX = Math.max(x1, x2, x3, x4);\\n  const minY = Math.min(y1, y2, y3, y4);\\n  const maxY = Math.max(y1, y2, y3, y4);\\n\\n  return x0 >= minX && x0 <= maxX && y0 >= minY && y0 <= maxY;\\n}\\n\\nasync function teleportToken(tokenDoc, position = undefined) {\\n  if (position) {\\n    console.log(`${orgName} | ${tokenDoc.name} will teleport to ${nextPortalId}`);\\n    const portalCoords = { x: position.data.source.x, y: position.data.source.y };\\n\\n    await new Sequence().animation().on(tokenDoc).opacity(0).animation().on(tokenDoc).teleportTo(portalCoords, { delay: 450 }).snapToGrid().closestSquare().waitUntilFinished().animation().on(tokenDoc).opacity(1).play();\\n  }\\n}\\n\\nasync function initiateDialog(tokenDoc, position) {\\n  await new Dialog(\\n    {\\n      title: \"Ability\",\\n      content: abilitySelection,\\n      buttons: {\\n        button1: {\\n          icon: \"<i class=\\'fa-light fa-person-to-portal\\'></i>\",\\n          label: \"Enter Portal\",\\n          callback: async () => await teleportToken(tokenDoc, position),\\n        },\\n        button2: {\\n          icon: \"<i class=\\'fa-light fa-dagger\\'></i>\",\\n          label: \"Pull the dagger\",\\n          callback: async () => {\\n            /// HOOK OFF\\n            Hooks.off(\"updateToken\", game.QuartusPortalDaggerHookClientSpecificId);\\n            console.log(`${orgName} | Deleted the Hook \"updateToken\" with ID = ${game.QuartusPortalDaggerHookClientSpecificId}`);\\n            delete game.QuartusPortalDaggerHookClientSpecificId;\\n\\n            await Sequencer.EffectManager.endEffects({ name: portalId });\\n            await Sequencer.EffectManager.endEffects({ name: itemName });\\n            const message = `<p>With a firm grip, you grasp the hilt of the <strong>${itemNameNormalized}</strong> and give it a sharp tug. The blade easily slides out of the wall, the portal it had opened closing in an instant. The magical bond between the dagger and yourself remains, its power still pulsing within you. You secure the blade at your side, ready to use its power again in your journey.</p>`;\\n            await createChatMessage(\"\", message);\\n            // Create the item in player\\'s inventory\\n            const daggerItem = game.items.getName(itemName);\\n            await actor.createEmbeddedDocuments(\"Item\", [daggerItem]);\\n            const equippedDaggerItem = actor.items.getName(itemName);\\n            equippedDaggerItem?.update({ \"system.attunement\": CONFIG.DND5E.attunementTypes.ATTUNED, \"system.equipped\": true });\\n          },\\n        },\\n      },\\n    },\\n    { width: 500 }\\n  ).render(true);\\n}\\n\\nasync function createChatMessage(summary, msg, img = true) {\\n  const artwork = img ? `<img src=${artWorkChatCardStormforgerStaff} title=${itemNameNormalized} width=\"272\" height=\"272\" />` : \"\";\\n  const chatPrimalDaggers = {\\n    content: `\\n  <div class=\"dnd5e chat-card item-card midi-qol-item-card\">\\n    <header class=\"card-header flexrow\">\\n      <img src=${artWorkChatTitle} title=\"${itemNameNormalized}\" width=\"36\" height=\"36\" />\\n      <h3 class=\"item-name\">${itemNameNormalized} ${summary}</h3>\\n    </header>\\n    <div class=\"card-content\">\\n      ${msg}\\n    </div>\\n    <hr>\\n      ${artwork}\\n    <footer class=\"card-footer\"><span>${itemNameNormalized}</span></footer>\\n  </div>`,\\n    type: CONST.CHAT_MESSAGE_TYPES.OOC,\\n  };\\n  await ChatMessage.create(chatPrimalDaggers);\\n}\\n\\nasync function checkDistance(crosshairs) {\\n  while (crosshairs.inFlight) {\\n    //wait for initial render\\n    await warpgate.wait(100);\\n\\n    const ray = new Ray(token.center, crosshairs);\\n    const distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0];\\n\\n    //only update if the distance has changed\\n    if (crosshairsDistance !== distance) {\\n      crosshairsDistance = distance;\\n      if (distance > distanceAvailable) {\\n        crosshairs.icon = \"icons/svg/hazard.svg\";\\n      } else {\\n        crosshairs.icon = info.item.img;\\n      }\\n\\n      crosshairs.draw();\\n      crosshairs.label = `${distance} ft`;\\n    }\\n  }\\n}\\n\\n//------------------------\\n// P R E C H E C K S\\n//-----------\\nconst portal1 = Sequencer.EffectManager.getEffects({ name: portalId });\\nif (portal1.length > 0) {\\n  ui.notifications.warn(`${portalName} already exist!`);\\n  return;\\n}\\n\\n//------------------------\\n// M A I N\\n//-----------\\nlet crosshairsDistance = 0;\\nconst portal1Template = await warpgate.crosshairs.show(\\n  {\\n    interval: token.document.width % 2 === 0 ? 1 : -1,\\n    size: token.document.width,\\n    icon: info.item.img,\\n    label: \"0 ft.\",\\n  },\\n  {\\n    show: checkDistance,\\n  }\\n);\\n\\n// Exit if\\nif (portal1Template.cancelled || crosshairsDistance > distanceAvailable) {\\n  return;\\n}\\n\\nconst portal1Coords = { x: portal1Template.x, y: portal1Template.y };\\n\\ngame.QuartusPortalDaggerHookClientSpecificId = Hooks.on(\"updateToken\", async (tokenDoc, updateData) => {\\n  // Movement guard\\n  const inPortalRange = isPointInSquare(portal1Coords, tokenDoc);\\n  const portal2Position = Sequencer.EffectManager.getEffects({ name: nextPortalId });\\n  const portal1Position = Sequencer.EffectManager.getEffects({ name: portalId });\\n  if (inPortalRange && portal2Position.length === 1 && portal1Position.length === 1 && (!isNaN(updateData.x) || !isNaN(updateData.y))) {\\n    if (tokenDoc.uuid === token.document.uuid) {\\n      await initiateDialog(tokenDoc, portal2Position[0]);\\n    } else {\\n      await teleportToken(tokenDoc, portal2Position[0]);\\n    }\\n  } else if (inPortalRange && portal2Position.length !== 1 && portal1Position.length === 1 && (!isNaN(updateData.x) || !isNaN(updateData.y))) {\\n    if (tokenDoc.uuid === token.document.uuid) {\\n      await initiateDialog(tokenDoc);\\n    }\\n    console.log(`${orgName} | ${tokenDoc.name} is in front of ${portalName} but there is no destination portal!`);\\n  }\\n});\\n\\nconsole.log(`${orgName} | Create the Hook \"updateToken\" with ID = ${game.QuartusPortalDaggerHookClientSpecificId}`);\\n\\n//------------------------\\n// V I S U A L S\\n//-----------\\nconst parser = new DOMParser();\\nconst doc = parser.parseFromString(chatMessageContent, \"text/html\");\\nconst cardContent = doc.querySelector(\".card-content\");\\ncardContent.insertAdjacentHTML(\"beforeend\", textToAppend);\\nconst result = doc.documentElement.outerHTML;\\nchatMessage.content = result;\\nawait chatMessage.update();\\n\\n// Select file for portal\\nconst jb2aId = \"jb2a_patreon\";\\nlet jb2aPortalBrightYellow = \"\";\\nif (game.modules.get(jb2aId)?.active) {\\n  jb2aPortalBrightYellow = \"jb2a.portals.vertical.ring.yellow\";\\n} else {\\n  jb2aPortalBrightYellow = \"jb2a.portals.vertical.ring.bright_yellow\";\\n}\\n\\nnew Sequence()\\n\\n  //Impact\\n  .effect()\\n  .file(\"jb2a.impact.010.orange\")\\n  // modules/JB2A_DnD5e/Library/Generic/Impact/Impact_10_Regular_Orange_400x400.webm\\n  .atLocation(token)\\n  .scaleToObject(2)\\n  .scaleOut(0, 250)\\n  .randomRotation()\\n\\n  //Dagger Throw\\n  .effect()\\n  .file(\"jb2a.dagger.throw.01.white\")\\n  .name(itemName)\\n  .atLocation(token)\\n  .template({ gridSize: 200, startPoint: 200, endPoint: 200 })\\n  .stretchTo(portal1Template, { onlyX: true })\\n  .filter(\"ColorMatrix\", { brightness: 1, contrast: 2, saturate: -1 })\\n  .spriteOffset({ x: 0.5 }, { gridUnits: true })\\n  .endTimePerc(0.9)\\n  .persist()\\n  .noLoop()\\n  .zIndex(1)\\n\\n  //Flash\\n  .effect()\\n  .from(token)\\n  .atLocation(token)\\n  .filter(\"ColorMatrix\", { saturate: -1, brightness: 10 })\\n  .scaleToObject(1)\\n  .filter(\"Blur\", { blurX: 5, blurY: 10 })\\n  .duration(600)\\n  .scaleOut(0, 500, { ease: \"easeOutCubic\" })\\n  .fadeOut(600)\\n  .waitUntilFinished(500)\\n\\n  //Portal\\n  .effect()\\n  .file(jb2aPortalBrightYellow)\\n  // modules/JB2A_DnD5e/Library/Generic/Portals/Portal_Bright_Yellow_V_400x250.webm\\n  .name(portalId)\\n  .filter(\"ColorMatrix\", { brightness: 1, contrast: 1, saturate: 0, hue: 230 })\\n  .atLocation(portal1Template)\\n  .scale(0.7)\\n  .scaleIn(0, 500, { ease: \"easeOutCubic\" })\\n  .scaleOut(0, 500, { ease: \"easeInQuint\" })\\n  .rotateTowards(token, { cacheLocation: true })\\n  .spriteRotation(90)\\n  .anchor({ x: 0.6, y: 0.5 })\\n  .belowTokens()\\n  .persist()\\n\\n  .play();\\n\\n// Delete the dagger from Inventory\\nconst itemToDelete = actor.items.getName(itemName);\\nif (itemToDelete) {\\n  itemToDelete.delete();\\n  console.log(`${orgName} | Deleted item ${itemName} from inventory of ${info.actor.name}`);\\n} else {\\n  console.log(`${orgName} | Could not find item ${itemName} in player\\'s inventory! Item was not deleted!`);\\n}',\n        _id: null,\n        img: \"icons/svg/dice-target.svg\",\n        folder: null,\n        sort: 0,\n        ownership: {\n          default: 0,\n        },\n      },\n    },\n  },\n};\n\nactor.createEmbeddedDocuments(\"Item\", [quartusPortalfeat]);\n"},"onDisable":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Quartus Portal Dagger v1\";\nconst featName = \"Quartus Portal (Active Ability)\";\n\nconst quartusPortalfeat = actor.items.getName(featName);\nif (quartusPortalfeat) {\n  quartusPortalfeat.delete();\n  console.log(`${orgName} | ${featName} was deleted!`);\n} else {\n  console.log(`${orgName} | ${featName} not found`);\n}\n"}}}}],"flags":{"scene-packer":{"hash":"4fa7872636df09e7df235f07910d0e12f64cf6ec","sourceId":"Item.rkkn6X7CmUVcGMu5"},"midi-qol":{"fumbleThreshold":null,"effectActivation":false},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"autoFailFriendly":false,"autoSaveFriendly":false,"rollOther":false,"critOther":false,"offHandWeapon":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.5"},"core":{"sourceId":"Item.aWsozYvUs3qrWt52"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1675079047399,"modifiedTime":1682324899519,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"Tqo4TwVTa5FWrhO8","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
{"name":"Tertius Portal Dagger v2","type":"weapon","img":"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-tertius.webp","system":{"description":{"value":"<p><em>Weapon (dagger), rare (requires attunement)</em></p><div class=\"block purple\" id=\" \" style=\"background:#aa88aa55\"><p><em>“The four ancient knives, whose power spans the planes of existence, are said to contain a secret knowledge that is older than time itself. Those who unlock their secrets will gain access to a realm of power and knowledge beyond the comprehension of mortal minds.”</em></p></div><hr /><p>You gain a +2 bonus to attack and damage rolls made with this magic weapon.</p><p>The Prime, Secundus, Tertius, and Quartus knives are powerful items, each imbued with a unique ability to open a portal to the next knife’s location. When inserted into any wall, the Prime knife will open a portal to the Secundus knife, the Secundus knife will open a portal to the Tertius knife, and so on. With the Quartus knife, the portal will take the user back to the location of the Prime knife.</p><p>A strong connection is formed between you and the dagger once the portal is opened and only you can retrieve the blade from its resting place.</p><img src=\"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-tertius.webp\" alt=\"Tertius Dagger\" /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":1,"price":{"value":0,"denomination":"gp"},"attunement":1,"equipped":false,"rarity":"veryRare","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":20,"long":60,"units":"ft"},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"mwak","attackBonus":"2","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["1d4 + @mod +2","piercing"]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"dagger","properties":{"fin":true,"lgt":true,"thr":true,"amm":false,"hvy":false,"fir":false,"foc":false,"lod":false,"rch":false,"rel":false,"ret":false,"spc":false,"two":false,"ver":false,"mgc":true,"ada":false,"sil":false},"proficient":true},"effects":[{"label":"Tertius Portal Effect (do not touch this)","icon":"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-tertius.webp","origin":"Item.WF3F3VMEhSon2nFg","duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"disabled":false,"_id":"1LWiMPoAc26KvC8x","changes":[],"tint":null,"transfer":true,"flags":{"times-up":{},"dfreds-convenient-effects":{"description":"Creates the gate to Quartus"},"dae":{"selfTarget":false,"selfTargetAlways":false,"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[]},"core":{"statusId":""},"ActiveAuras":{"isAura":false,"aura":"None","radius":"undefined","alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false},"effectmacro":{"onDelete":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Tertius Portal Dagger v1\";\nconst featName = \"Tertius Portal (Active Ability)\";\n\nconst tertiusPortalfeat = actor.items.getName(featName);\nif (tertiusPortalfeat) {\n  tertiusPortalfeat.delete();\n  console.log(`${orgName} | ${featName} was deleted!`);\n} else {\n  console.log(`${orgName} | ${featName} not found`);\n}\n"},"onEnable":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Tertius Portal Dagger v2\";\nconst featName = \"Tertius Portal (Active Ability)\";\nconst itemNameNormalized = \"Tertius Portal Dagger\";\nconst nextItemNameNormalized = \"Quartus\";\nlet featExists = false;\n\nactor.items.forEach(function (item) {\n  if (item.name === featName && item.type === \"feat\") {\n    console.log(`${orgName} | Feat ${featName} already exists`);\n    featExists = true;\n  }\n});\n\nif (featExists) return;\n\nconst tertiusPortalfeat = {\n  name: featName,\n  type: \"feat\",\n  system: {\n    description: {\n      value: `<p>As you grip the hilt of the <strong>${itemNameNormalized}</strong>, you feel its magical energy coursing through your veins. With a flick of the wrist, you throw the blade towards the wall before you. The air shimmers and ripples, as if it were a pool of water disturbed by a stone. Suddenly, a circular portal opens before you, leading to the location of the <strong>${nextItemNameNormalized}</strong> knife. You feel a powerful bond being formed between the dagger and yourself, assuring that only you can retrieve the blade from its resting place. No matter where the <strong>${nextItemNameNormalized}</strong> knife may be, the <strong>${itemNameNormalized}</strong> serves as a guide, unlocking the path to your next destination.</p>`,\n      chat: \"\",\n      unidentified: \"\",\n    },\n    source: itemName,\n    activation: {\n      type: \"action\",\n      cost: 1,\n      condition: \"\",\n    },\n    duration: {\n      value: \"\",\n      units: \"\",\n    },\n    target: {\n      value: null,\n      width: null,\n      units: \"\",\n      type: \"\",\n    },\n    range: {\n      value: 20,\n      long: 40,\n      units: \"ft\",\n    },\n    uses: {\n      value: null,\n      max: \"\",\n      per: \"\",\n      recovery: \"\",\n    },\n    consume: {\n      type: \"\",\n      target: \"\",\n      amount: null,\n    },\n    ability: \"\",\n    actionType: \"other\",\n    attackBonus: \"\",\n    chatFlavor: \"\",\n    critical: {\n      threshold: null,\n      damage: \"\",\n    },\n    damage: {\n      parts: [],\n      versatile: \"\",\n    },\n    formula: \"\",\n    save: {\n      ability: \"\",\n      dc: null,\n      scaling: \"spell\",\n    },\n    type: {\n      value: \"feat\",\n      subtype: \"\",\n    },\n    requirements: \"\",\n    recharge: {\n      value: null,\n      charged: false,\n    },\n  },\n  img: \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-tertius-ability.webp\",\n  effects: [],\n  folder: null,\n  sort: 0,\n  flags: {\n    \"midi-qol\": {\n      effectActivation: false,\n      onUseMacroName: \"[templatePlaced]ItemMacro\",\n    },\n    itemacro: {\n      macro: {\n        name: \"Tertius Portal (Active Ability)\",\n        type: \"script\",\n        scope: \"global\",\n        command:\n          'const orgName = \"Boss Loot\";\\nconst itemName = \"Tertius Portal Dagger v2\";\\nconst itemNameNormalized = \"Tertius Portal Dagger\";\\nconst nextItemName = \"Quartus Portal Dagger\";\\nconst portalName = \"Tertius Portal\";\\nconst portalId = \"Tertius-Portal\";\\nconst nextPortalId = \"Quartus-Portal\";\\nconst info = args[0];\\nconst chatMessage = game.messages.get(info.itemCardId);\\nconst chatMessageContent = chatMessage.content;\\nconst distanceAvailable = info.item.system.range.long;\\nconst artWorkChatTitle = \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-tertius.webp\";\\nconst artWorkChatCardStormforgerStaff = \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-animated-for-chat-portal-dagger-tertius.gif\";\\nconst textToAppend = \\'<hr><img src=\"\\' + artWorkChatCardStormforgerStaff + \\'\" width=\"272\" height=\"272\"/>\\';\\n\\nconst abilitySelection = `<div class=\"dnd5e chat-card item-card midi-qol-item-card\">\\n    <header class=\"card-header flexrow\">\\n      <img src=\"${artWorkChatTitle}\" title=\"${itemNameNormalized}\" width=\"36\" height=\"36\" />\\n      <h3 class=\"item-name\">${itemNameNormalized}</h3>\\n    </header>\\n    <div class=\"card-content\">\\n      <p style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Bold}\">Do you want to enter in portal or pull the dagger and close the portal?</p>\\n      <br />\\n    </div>\\n    </div>`;\\n\\n//------------------------\\n// F U N C T I O N S\\n//-----------\\nfunction isPointInSquare(point, tokenDocument) {\\n  const gridSize = canvas.scene.grid.size;\\n  const h = tokenDocument.height * gridSize;\\n  const w = tokenDocument.width * gridSize;\\n  const { x: x0, y: y0 } = point;\\n  const { x: x1, y: y1 } = tokenDocument;\\n  const x2 = tokenDocument.x + w;\\n  const y2 = tokenDocument.y;\\n  const x3 = tokenDocument.x + w;\\n  const y3 = tokenDocument.y + h;\\n  const x4 = tokenDocument.x;\\n  const y4 = tokenDocument.y + h;\\n\\n  const minX = Math.min(x1, x2, x3, x4);\\n  const maxX = Math.max(x1, x2, x3, x4);\\n  const minY = Math.min(y1, y2, y3, y4);\\n  const maxY = Math.max(y1, y2, y3, y4);\\n\\n  return x0 >= minX && x0 <= maxX && y0 >= minY && y0 <= maxY;\\n}\\n\\nasync function teleportToken(tokenDoc, position = undefined) {\\n  if (position) {\\n    console.log(`${orgName} | ${tokenDoc.name} will teleport to ${nextPortalId}`);\\n    const portalCoords = { x: position.data.source.x, y: position.data.source.y };\\n\\n    await new Sequence().animation().on(tokenDoc).opacity(0).animation().on(tokenDoc).teleportTo(portalCoords, { delay: 450 }).snapToGrid().closestSquare().waitUntilFinished().animation().on(tokenDoc).opacity(1).play();\\n  }\\n}\\n\\nasync function initiateDialog(tokenDoc, position) {\\n  await new Dialog(\\n    {\\n      title: \"Ability\",\\n      content: abilitySelection,\\n      buttons: {\\n        button1: {\\n          icon: \"<i class=\\'fa-light fa-person-to-portal\\'></i>\",\\n          label: \"Enter Portal\",\\n          callback: async () => await teleportToken(tokenDoc, position),\\n        },\\n        button2: {\\n          icon: \"<i class=\\'fa-light fa-dagger\\'></i>\",\\n          label: \"Pull the dagger\",\\n          callback: async () => {\\n            /// HOOK OFF\\n            Hooks.off(\"updateToken\", game.TertiusPortalDaggerHookClientSpecificId);\\n            console.log(`${orgName} | Deleted the Hook \"updateToken\" with ID = ${game.TertiusPortalDaggerHookClientSpecificId}`);\\n            delete game.TertiusPortalDaggerHookClientSpecificId;\\n\\n            await Sequencer.EffectManager.endEffects({ name: portalId });\\n            await Sequencer.EffectManager.endEffects({ name: itemName });\\n            const message = `<p>With a firm grip, you grasp the hilt of the <strong>${itemNameNormalized}</strong> and give it a sharp tug. The blade easily slides out of the wall, the portal it had opened closing in an instant. The magical bond between the dagger and yourself remains, its power still pulsing within you. You secure the blade at your side, ready to use its power again in your journey.</p>`;\\n            await createChatMessage(\"\", message);\\n            // Create the item in player\\'s inventory\\n            const daggerItem = game.items.getName(itemName);\\n            await actor.createEmbeddedDocuments(\"Item\", [daggerItem]);\\n            const equippedDaggerItem = actor.items.getName(itemName);\\n            equippedDaggerItem?.update({ \"system.attunement\": CONFIG.DND5E.attunementTypes.ATTUNED, \"system.equipped\": true });\\n          },\\n        },\\n      },\\n    },\\n    { width: 500 }\\n  ).render(true);\\n}\\n\\nasync function createChatMessage(summary, msg, img = true) {\\n  const artwork = img ? `<img src=${artWorkChatCardStormforgerStaff} title=${itemNameNormalized} width=\"272\" height=\"272\" />` : \"\";\\n  const chatPrimalDaggers = {\\n    content: `\\n  <div class=\"dnd5e chat-card item-card midi-qol-item-card\">\\n    <header class=\"card-header flexrow\">\\n      <img src=${artWorkChatTitle} title=\"${itemNameNormalized}\" width=\"36\" height=\"36\" />\\n      <h3 class=\"item-name\">${itemNameNormalized} ${summary}</h3>\\n    </header>\\n    <div class=\"card-content\">\\n      ${msg}\\n    </div>\\n    <hr>\\n      ${artwork}\\n    <footer class=\"card-footer\"><span>${itemNameNormalized}</span></footer>\\n  </div>`,\\n    type: CONST.CHAT_MESSAGE_TYPES.OOC,\\n  };\\n  await ChatMessage.create(chatPrimalDaggers);\\n}\\n\\nasync function checkDistance(crosshairs) {\\n  while (crosshairs.inFlight) {\\n    //wait for initial render\\n    await warpgate.wait(100);\\n\\n    const ray = new Ray(token.center, crosshairs);\\n    const distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0];\\n\\n    //only update if the distance has changed\\n    if (crosshairsDistance !== distance) {\\n      crosshairsDistance = distance;\\n      if (distance > distanceAvailable) {\\n        crosshairs.icon = \"icons/svg/hazard.svg\";\\n      } else {\\n        crosshairs.icon = info.item.img;\\n      }\\n\\n      crosshairs.draw();\\n      crosshairs.label = `${distance} ft`;\\n    }\\n  }\\n}\\n\\n//------------------------\\n// P R E C H E C K S\\n//-----------\\nconst portal1 = Sequencer.EffectManager.getEffects({ name: portalId });\\nif (portal1.length > 0) {\\n  ui.notifications.warn(`${portalName} already exist!`);\\n  return;\\n}\\n\\n//------------------------\\n// M A I N\\n//-----------\\nlet crosshairsDistance = 0;\\nconst portal1Template = await warpgate.crosshairs.show(\\n  {\\n    interval: token.document.width % 2 === 0 ? 1 : -1,\\n    size: token.document.width,\\n    icon: info.item.img,\\n    label: \"0 ft.\",\\n  },\\n  {\\n    show: checkDistance,\\n  }\\n);\\n\\n// Exit if\\nif (portal1Template.cancelled || crosshairsDistance > distanceAvailable) {\\n  return;\\n}\\n\\nconst portal1Coords = { x: portal1Template.x, y: portal1Template.y };\\n\\ngame.TertiusPortalDaggerHookClientSpecificId = Hooks.on(\"updateToken\", async (tokenDoc, updateData) => {\\n  // Movement guard\\n  const inPortalRange = isPointInSquare(portal1Coords, tokenDoc);\\n  const portal2Position = Sequencer.EffectManager.getEffects({ name: nextPortalId });\\n  const portal1Position = Sequencer.EffectManager.getEffects({ name: portalId });\\n  if (inPortalRange && portal2Position.length === 1 && portal1Position.length === 1 && (!isNaN(updateData.x) || !isNaN(updateData.y))) {\\n    if (tokenDoc.uuid === token.document.uuid) {\\n      await initiateDialog(tokenDoc, portal2Position[0]);\\n    } else {\\n      await teleportToken(tokenDoc, portal2Position[0]);\\n    }\\n  } else if (inPortalRange && portal2Position.length !== 1 && portal1Position.length === 1 && (!isNaN(updateData.x) || !isNaN(updateData.y))) {\\n    if (tokenDoc.uuid === token.document.uuid) {\\n      await initiateDialog(tokenDoc);\\n    }\\n    console.log(`${orgName} | ${tokenDoc.name} is in front of ${portalName} but there is no destination portal!`);\\n  }\\n});\\n\\nconsole.log(`${orgName} | Create the Hook \"updateToken\" with ID = ${game.TertiusPortalDaggerHookClientSpecificId}`);\\n\\n//------------------------\\n// V I S U A L S\\n//-----------\\nconst parser = new DOMParser();\\nconst doc = parser.parseFromString(chatMessageContent, \"text/html\");\\nconst cardContent = doc.querySelector(\".card-content\");\\ncardContent.insertAdjacentHTML(\"beforeend\", textToAppend);\\nconst result = doc.documentElement.outerHTML;\\nchatMessage.content = result;\\nawait chatMessage.update();\\n\\n// Select file for portal\\nconst jb2aId = \"jb2a_patreon\";\\nlet jb2aPortalBrightYellow = \"\";\\nif (game.modules.get(jb2aId)?.active) {\\n  jb2aPortalBrightYellow = \"jb2a.portals.vertical.ring.yellow\";\\n} else {\\n  jb2aPortalBrightYellow = \"jb2a.portals.vertical.ring.bright_yellow\";\\n}\\n\\nnew Sequence()\\n\\n  //Impact\\n  .effect()\\n  .file(\"jb2a.impact.010.orange\")\\n  // modules/JB2A_DnD5e/Library/Generic/Impact/Impact_10_Regular_Orange_400x400.webm\\n  .atLocation(token)\\n  .scaleToObject(2)\\n  .scaleOut(0, 250)\\n  .randomRotation()\\n\\n  //Dagger Throw\\n  .effect()\\n  .file(\"jb2a.dagger.throw.01.white\")\\n  .name(itemName)\\n  .atLocation(token)\\n  .template({ gridSize: 200, startPoint: 200, endPoint: 200 })\\n  .stretchTo(portal1Template, { onlyX: true })\\n  .filter(\"ColorMatrix\", { brightness: 1, contrast: 2, saturate: -1 })\\n  .spriteOffset({ x: 0.5 }, { gridUnits: true })\\n  .endTimePerc(0.9)\\n  .persist()\\n  .noLoop()\\n  .zIndex(1)\\n\\n  //Flash\\n  .effect()\\n  .from(token)\\n  .atLocation(token)\\n  .filter(\"ColorMatrix\", { saturate: -1, brightness: 10 })\\n  .scaleToObject(1)\\n  .filter(\"Blur\", { blurX: 5, blurY: 10 })\\n  .duration(600)\\n  .scaleOut(0, 500, { ease: \"easeOutCubic\" })\\n  .fadeOut(600)\\n  .waitUntilFinished(500)\\n\\n  //Portal\\n  .effect()\\n  .file(jb2aPortalBrightYellow)\\n  // modules/JB2A_DnD5e/Library/Generic/Portals/Portal_Bright_Yellow_V_400x250.webm\\n  .name(portalId)\\n  .filter(\"ColorMatrix\", { brightness: 1.5, contrast: 0, saturate: 0, hue: 55 })\\n  .atLocation(portal1Template)\\n  .scale(0.7)\\n  .scaleIn(0, 500, { ease: \"easeOutCubic\" })\\n  .scaleOut(0, 500, { ease: \"easeInQuint\" })\\n  .rotateTowards(token, { cacheLocation: true })\\n  .spriteRotation(90)\\n  .anchor({ x: 0.6, y: 0.5 })\\n  .belowTokens()\\n  .persist()\\n\\n  .play();\\n\\n// Delete the dagger from Inventory\\nconst itemToDelete = actor.items.getName(itemName);\\nif (itemToDelete) {\\n  itemToDelete.delete();\\n  console.log(`${orgName} | Deleted item ${itemName} from inventory of ${info.actor.name}`);\\n} else {\\n  console.log(`${orgName} | Could not find item ${itemName} in player\\'s inventory! Item was not deleted!`);\\n}',\n        _id: null,\n        img: \"icons/svg/dice-target.svg\",\n        folder: null,\n        sort: 0,\n        ownership: {\n          default: 0,\n        },\n      },\n    },\n  },\n};\n\nactor.createEmbeddedDocuments(\"Item\", [tertiusPortalfeat]);\n"},"onDisable":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Tertius Portal Dagger v1\";\nconst featName = \"Tertius Portal (Active Ability)\";\n\nconst tertiusPortalfeat = actor.items.getName(featName);\nif (tertiusPortalfeat) {\n  tertiusPortalfeat.delete();\n  console.log(`${orgName} | ${featName} was deleted!`);\n} else {\n  console.log(`${orgName} | ${featName} not found`);\n}\n"}}}}],"flags":{"core":{"sourceId":"Compendium.dnd5e.items.Lr8aRsnia8hftPAb"},"midi-qol":{"fumbleThreshold":null,"effectActivation":false},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"autoFailFriendly":false,"autoSaveFriendly":false,"rollOther":false,"critOther":false,"offHandWeapon":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.5"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1661787233621,"modifiedTime":1682324899523,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"WF3F3VMEhSon2nFg","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
{"name":"Prime Portal Dagger v2","type":"weapon","img":"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-prime.webp","system":{"description":{"value":"<p><em>Weapon (dagger), rare (requires attunement)</em></p><div class=\"block purple\" id=\" \" style=\"background:#aa88aa55\"><p><em>“The four ancient knives, whose power spans the planes of existence, are said to contain a secret knowledge that is older than time itself. Those who unlock their secrets will gain access to a realm of power and knowledge beyond the comprehension of mortal minds.”</em></p></div><hr /><p>You gain a +2 bonus to attack and damage rolls made with this magic weapon.</p><p>The Prime, Secundus, Tertius, and Quartus knives are powerful items, each imbued with a unique ability to open a portal to the next knife’s location. When inserted into any wall, the Prime knife will open a portal to the Secundus knife, the Secundus knife will open a portal to the Tertius knife, and so on. With the Quartus knife, the portal will take the user back to the location of the Prime knife.</p><p>A strong connection is formed between you and the dagger once the portal is opened and only you can retrieve the blade from its resting place.</p><img src=\"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-prime.webp\" alt=\"Prime Dagger\" /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":1,"price":{"value":0,"denomination":"gp"},"attunement":1,"equipped":false,"rarity":"veryRare","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":20,"long":60,"units":"ft"},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"mwak","attackBonus":"2","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["1d4 + @mod +2","piercing"]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":null},"hp":{"value":null,"max":null,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"dagger","properties":{"ada":false,"amm":false,"fin":true,"fir":false,"foc":false,"hvy":false,"lgt":true,"lod":false,"mgc":true,"rch":false,"rel":false,"ret":false,"sil":false,"spc":false,"thr":true,"two":false,"ver":false},"proficient":true},"effects":[{"label":"Prime Portal Effect (do not touch this)","icon":"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-prime.webp","origin":"Item.WZZD52cieHIRUviH","duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"disabled":false,"_id":"v6lP2MaapT6w8IxK","changes":[],"tint":null,"transfer":true,"flags":{"times-up":{},"dfreds-convenient-effects":{"description":"Creates the gate to Secundus"},"dae":{"selfTarget":false,"selfTargetAlways":false,"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[]},"core":{"statusId":""},"ActiveAuras":{"isAura":false,"aura":"None","radius":"undefined","alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false},"effectmacro":{"onDelete":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Prime Portal Dagger\";\nconst featName = \"Prime Portal (Active Ability)\";\n\nconst primePortalfeat = actor.items.getName(featName);\nif (primePortalfeat) {\n  primePortalfeat.delete();\n  console.log(`${orgName} | ${featName} was deleted!`);\n} else {\n  console.log(`${orgName} | ${featName} not found`);\n}\n"},"onEnable":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Prime Portal Dagger v2\";\nconst featName = \"Prime Portal (Active Ability)\";\nconst itemNameNormalized = \"Prime Portal Dagger\";\nconst nextItemNameNormalized = \"Scundus\";\nlet featExists = false;\n\nactor.items.forEach(function (item) {\n  if (item.name === featName && item.type === \"feat\") {\n    console.log(`${orgName} | Feat ${featName} already exists`);\n    featExists = true;\n  }\n});\n\nif (featExists) return;\n\nconst primePortalfeat = {\n  name: featName,\n  type: \"feat\",\n  system: {\n    description: {\n      value: `<p>As you grip the hilt of the <strong>${itemNameNormalized}</strong>, you feel its magical energy coursing through your veins. With a flick of the wrist, you throw the blade towards the wall before you. The air shimmers and ripples, as if it were a pool of water disturbed by a stone. Suddenly, a circular portal opens before you, leading to the location of the <strong>${nextItemNameNormalized}</strong> knife. You feel a powerful bond being formed between the dagger and yourself, assuring that only you can retrieve the blade from its resting place. No matter where the <strong>${nextItemNameNormalized}</strong> knife may be, the <strong>${itemNameNormalized}</strong> serves as a guide, unlocking the path to your next destination.</p>`,\n      chat: \"\",\n      unidentified: \"\",\n    },\n    source: itemName,\n    activation: {\n      type: \"action\",\n      cost: 1,\n      condition: \"\",\n    },\n    duration: {\n      value: \"\",\n      units: \"\",\n    },\n    target: {\n      value: null,\n      width: null,\n      units: \"\",\n      type: \"\",\n    },\n    range: {\n      value: 20,\n      long: 40,\n      units: \"ft\",\n    },\n    uses: {\n      value: null,\n      max: \"\",\n      per: \"\",\n      recovery: \"\",\n    },\n    consume: {\n      type: \"\",\n      target: \"\",\n      amount: null,\n    },\n    ability: \"\",\n    actionType: \"other\",\n    attackBonus: \"\",\n    chatFlavor: \"\",\n    critical: {\n      threshold: null,\n      damage: \"\",\n    },\n    damage: {\n      parts: [],\n      versatile: \"\",\n    },\n    formula: \"\",\n    save: {\n      ability: \"\",\n      dc: null,\n      scaling: \"spell\",\n    },\n    type: {\n      value: \"feat\",\n      subtype: \"\",\n    },\n    requirements: \"\",\n    recharge: {\n      value: null,\n      charged: false,\n    },\n  },\n  img: \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-prime-ability.webp\",\n  effects: [],\n  folder: null,\n  sort: 0,\n  flags: {\n    \"midi-qol\": {\n      effectActivation: false,\n      onUseMacroName: \"[templatePlaced]ItemMacro\",\n    },\n    itemacro: {\n      macro: {\n        name: \"Prime Portal (Active Ability)\",\n        type: \"script\",\n        scope: \"global\",\n        command:\n          'const orgName = \"Boss Loot\";\\nconst itemName = \"Prime Portal Dagger v2\";\\nconst itemNameNormalized = \"Prime Portal Dagger\";\\nconst nextItemName = \"Secundus Portal Dagger\";\\nconst portalName = \"Prime Portal\";\\nconst portalId = \"Prime-Portal\";\\nconst nextPortalId = \"Secundus-Portal\";\\nconst info = args[0];\\nconst chatMessage = game.messages.get(info.itemCardId);\\nconst chatMessageContent = chatMessage.content;\\nconst distanceAvailable = info.item.system.range.long;\\nconst artWorkChatTitle = \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-prime.webp\";\\nconst artWorkChatCardStormforgerStaff = \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-animated-for-chat-portal-dagger-prime.gif\";\\nconst textToAppend = \\'<hr><img src=\"\\' + artWorkChatCardStormforgerStaff + \\'\" width=\"272\" height=\"272\"/>\\';\\n\\nconst abilitySelection = `<div class=\"dnd5e chat-card item-card midi-qol-item-card\">\\n    <header class=\"card-header flexrow\">\\n      <img src=\"${artWorkChatTitle}\" title=\"${itemNameNormalized}\" width=\"36\" height=\"36\" />\\n      <h3 class=\"item-name\">${itemNameNormalized}</h3>\\n    </header>\\n    <div class=\"card-content\">\\n      <p style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Bold}\">Do you want to enter in portal or pull the dagger and close the portal?</p>\\n      <br />\\n    </div>\\n    </div>`;\\n\\n//------------------------\\n// F U N C T I O N S\\n//-----------\\nfunction isPointInSquare(point, tokenDocument) {\\n  const gridSize = canvas.scene.grid.size;\\n  const h = tokenDocument.height * gridSize;\\n  const w = tokenDocument.width * gridSize;\\n  const { x: x0, y: y0 } = point;\\n  const { x: x1, y: y1 } = tokenDocument;\\n  const x2 = tokenDocument.x + w;\\n  const y2 = tokenDocument.y;\\n  const x3 = tokenDocument.x + w;\\n  const y3 = tokenDocument.y + h;\\n  const x4 = tokenDocument.x;\\n  const y4 = tokenDocument.y + h;\\n\\n  const minX = Math.min(x1, x2, x3, x4);\\n  const maxX = Math.max(x1, x2, x3, x4);\\n  const minY = Math.min(y1, y2, y3, y4);\\n  const maxY = Math.max(y1, y2, y3, y4);\\n\\n  return x0 >= minX && x0 <= maxX && y0 >= minY && y0 <= maxY;\\n}\\n\\nasync function teleportToken(tokenDoc, position = undefined) {\\n  if (position) {\\n    console.log(`${orgName} | ${tokenDoc.name} will teleport to ${nextPortalId}`);\\n    const portalCoords = { x: position.data.source.x, y: position.data.source.y };\\n\\n    await new Sequence().animation().on(tokenDoc).opacity(0).animation().on(tokenDoc).teleportTo(portalCoords, { delay: 450 }).snapToGrid().closestSquare().waitUntilFinished().animation().on(tokenDoc).opacity(1).play();\\n  }\\n}\\n\\nasync function initiateDialog(tokenDoc, position) {\\n  await new Dialog(\\n    {\\n      title: \"Ability\",\\n      content: abilitySelection,\\n      buttons: {\\n        button1: {\\n          icon: \"<i class=\\'fa-light fa-person-to-portal\\'></i>\",\\n          label: \"Enter Portal\",\\n          callback: async () => await teleportToken(tokenDoc, position),\\n        },\\n        button2: {\\n          icon: \"<i class=\\'fa-light fa-dagger\\'></i>\",\\n          label: \"Pull the dagger\",\\n          callback: async () => {\\n            /// HOOK OFF\\n            Hooks.off(\"updateToken\", game.PrimePortalDaggerHookClientSpecificId);\\n            console.log(`${orgName} | Deleted the Hook \"updateToken\" with ID = ${game.PrimePortalDaggerHookClientSpecificId}`);\\n            delete game.PrimePortalDaggerHookClientSpecificId;\\n\\n            await Sequencer.EffectManager.endEffects({ name: portalId });\\n            await Sequencer.EffectManager.endEffects({ name: itemName });\\n            const message = `<p>With a firm grip, you grasp the hilt of the <strong>${itemNameNormalized}</strong> and give it a sharp tug. The blade easily slides out of the wall, the portal it had opened closing in an instant. The magical bond between the dagger and yourself remains, its power still pulsing within you. You secure the blade at your side, ready to use its power again in your journey.</p>`;\\n            await createChatMessage(\"\", message);\\n            // Create the item in player\\'s inventory\\n            const daggerItem = game.items.getName(itemName);\\n            await actor.createEmbeddedDocuments(\"Item\", [daggerItem]);\\n            const equippedDaggerItem = actor.items.getName(itemName);\\n            equippedDaggerItem?.update({ \"system.attunement\": CONFIG.DND5E.attunementTypes.ATTUNED, \"system.equipped\": true });\\n          },\\n        },\\n      },\\n    },\\n    { width: 500 }\\n  ).render(true);\\n}\\n\\nasync function createChatMessage(summary, msg, img = true) {\\n  const artwork = img ? `<img src=${artWorkChatCardStormforgerStaff} title=${itemNameNormalized} width=\"272\" height=\"272\" />` : \"\";\\n  const chatPrimalDaggers = {\\n    content: `\\n  <div class=\"dnd5e chat-card item-card midi-qol-item-card\">\\n    <header class=\"card-header flexrow\">\\n      <img src=${artWorkChatTitle} title=\"${itemNameNormalized}\" width=\"36\" height=\"36\" />\\n      <h3 class=\"item-name\">${itemNameNormalized} ${summary}</h3>\\n    </header>\\n    <div class=\"card-content\">\\n      ${msg}\\n    </div>\\n    <hr>\\n      ${artwork}\\n    <footer class=\"card-footer\"><span>${itemNameNormalized}</span></footer>\\n  </div>`,\\n    type: CONST.CHAT_MESSAGE_TYPES.OOC,\\n  };\\n  await ChatMessage.create(chatPrimalDaggers);\\n}\\n\\nasync function checkDistance(crosshairs) {\\n  while (crosshairs.inFlight) {\\n    //wait for initial render\\n    await warpgate.wait(100);\\n\\n    const ray = new Ray(token.center, crosshairs);\\n    const distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0];\\n\\n    //only update if the distance has changed\\n    if (crosshairsDistance !== distance) {\\n      crosshairsDistance = distance;\\n      if (distance > distanceAvailable) {\\n        crosshairs.icon = \"icons/svg/hazard.svg\";\\n      } else {\\n        crosshairs.icon = info.item.img;\\n      }\\n\\n      crosshairs.draw();\\n      crosshairs.label = `${distance} ft`;\\n    }\\n  }\\n}\\n\\n//------------------------\\n// P R E C H E C K S\\n//-----------\\nconst portal1 = Sequencer.EffectManager.getEffects({ name: portalId });\\nif (portal1.length > 0) {\\n  ui.notifications.warn(`${portalName} already exist!`);\\n  return;\\n}\\n\\n//------------------------\\n// M A I N\\n//-----------\\nlet crosshairsDistance = 0;\\nconst portal1Template = await warpgate.crosshairs.show(\\n  {\\n    interval: token.document.width % 2 === 0 ? 1 : -1,\\n    size: token.document.width,\\n    icon: info.item.img,\\n    label: \"0 ft.\",\\n  },\\n  {\\n    show: checkDistance,\\n  }\\n);\\n\\n// Exit if\\nif (portal1Template.cancelled || crosshairsDistance > distanceAvailable) {\\n  return;\\n}\\n\\nconst portal1Coords = { x: portal1Template.x, y: portal1Template.y };\\n\\ngame.PrimePortalDaggerHookClientSpecificId = Hooks.on(\"updateToken\", async (tokenDoc, updateData) => {\\n  // Movement guard\\n  const inPortalRange = isPointInSquare(portal1Coords, tokenDoc);\\n  const portal2Position = Sequencer.EffectManager.getEffects({ name: nextPortalId });\\n  const portal1Position = Sequencer.EffectManager.getEffects({ name: portalId });\\n  if (inPortalRange && portal2Position.length === 1 && portal1Position.length === 1 && (!isNaN(updateData.x) || !isNaN(updateData.y))) {\\n    if (tokenDoc.uuid === token.document.uuid) {\\n      await initiateDialog(tokenDoc, portal2Position[0]);\\n    } else {\\n      await teleportToken(tokenDoc, portal2Position[0]);\\n    }\\n  } else if (inPortalRange && portal2Position.length !== 1 && portal1Position.length === 1 && (!isNaN(updateData.x) || !isNaN(updateData.y))) {\\n    if (tokenDoc.uuid === token.document.uuid) {\\n      await initiateDialog(tokenDoc);\\n    }\\n    console.log(`${orgName} | ${tokenDoc.name} is in front of ${portalName} but there is no destination portal!`);\\n  }\\n});\\n\\nconsole.log(`${orgName} | Create the Hook \"updateToken\" with ID = ${game.PrimePortalDaggerHookClientSpecificId}`);\\n\\n//------------------------\\n// V I S U A L S\\n//-----------\\nconst parser = new DOMParser();\\nconst doc = parser.parseFromString(chatMessageContent, \"text/html\");\\nconst cardContent = doc.querySelector(\".card-content\");\\ncardContent.insertAdjacentHTML(\"beforeend\", textToAppend);\\nconst result = doc.documentElement.outerHTML;\\nchatMessage.content = result;\\nawait chatMessage.update();\\n\\n// Select file for portal\\nconst jb2aId = \"jb2a_patreon\";\\nlet jb2aPortalBrightYellow = \"\";\\nif (game.modules.get(jb2aId)?.active) {\\n  jb2aPortalBrightYellow = \"jb2a.portals.vertical.ring.yellow\";\\n} else {\\n  jb2aPortalBrightYellow = \"jb2a.portals.vertical.ring.bright_yellow\";\\n}\\n\\nnew Sequence()\\n  //Impact\\n  .effect()\\n  .file(\"jb2a.impact.010.orange\")\\n  // modules/JB2A_DnD5e/Library/Generic/Impact/Impact_10_Regular_Orange_400x400.webm\\n  .atLocation(token)\\n  .scaleToObject(2)\\n  .scaleOut(0, 250)\\n  .randomRotation()\\n\\n  //Dagger Throw\\n  .effect()\\n  .file(\"jb2a.dagger.throw.01.white\")\\n  .name(itemName)\\n  .atLocation(token)\\n  .template({ gridSize: 200, startPoint: 200, endPoint: 200 })\\n  .stretchTo(portal1Template, { onlyX: true })\\n  .filter(\"ColorMatrix\", { brightness: 1, contrast: 2, saturate: -1 })\\n  .spriteOffset({ x: 0.5 }, { gridUnits: true })\\n  .endTimePerc(0.9)\\n  .persist()\\n  .noLoop()\\n  .zIndex(1)\\n\\n  //Flash\\n  .effect()\\n  .from(token)\\n  .atLocation(token)\\n  .filter(\"ColorMatrix\", { saturate: -1, brightness: 10 })\\n  .scaleToObject(1)\\n  .filter(\"Blur\", { blurX: 5, blurY: 10 })\\n  .duration(600)\\n  .scaleOut(0, 500, { ease: \"easeOutCubic\" })\\n  .fadeOut(600)\\n  .waitUntilFinished(500)\\n\\n  //Portal\\n  .effect()\\n  .file(jb2aPortalBrightYellow)\\n  // modules/JB2A_DnD5e/Library/Generic/Portals/Portal_Bright_Yellow_V_400x250.webm\\n  .name(portalId)\\n  .filter(\"ColorMatrix\", { hue: 345, saturate: 0, brightness: 1, contrast: 1 })\\n  .atLocation(portal1Template)\\n  .scale(0.7)\\n  .scaleIn(0, 500, { ease: \"easeOutCubic\" })\\n  .scaleOut(0, 500, { ease: \"easeInQuint\" })\\n  .rotateTowards(token, { cacheLocation: true })\\n  .spriteRotation(90)\\n  .anchor({ x: 0.6, y: 0.5 })\\n  .belowTokens()\\n  .persist()\\n\\n  .play();\\n\\n// Delete the dagger from Inventory\\nconst itemToDelete = actor.items.getName(itemName);\\nif (itemToDelete) {\\n  itemToDelete.delete();\\n  console.log(`${orgName} | Deleted item ${itemName} from inventory of ${info.actor.name}`);\\n} else {\\n  console.log(`${orgName} | Could not find item ${itemName} in player\\'s inventory! Item was not deleted!`);\\n}',\n        _id: null,\n        img: \"icons/svg/dice-target.svg\",\n        folder: null,\n        sort: 0,\n        ownership: {\n          default: 0,\n        },\n      },\n    },\n  },\n};\n\nactor.createEmbeddedDocuments(\"Item\", [primePortalfeat]);\n"},"onDisable":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Prime Portal Dagger\";\nconst featName = \"Prime Portal (Active Ability)\";\n\nconst primePortalfeat = actor.items.getName(featName);\nif (primePortalfeat) {\n  primePortalfeat.delete();\n  console.log(`${orgName} | ${featName} was deleted!`);\n} else {\n  console.log(`${orgName} | ${featName} not found`);\n}\n"}}}}],"flags":{"scene-packer":{"hash":"07e36a15baa6f75eb01f05468356a2517b1845f3","sourceId":"Item.aRqm168TKq4ivArd"},"midi-qol":{"fumbleThreshold":null,"effectActivation":false},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"autoFailFriendly":false,"autoSaveFriendly":false,"rollOther":false,"critOther":false,"offHandWeapon":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.5"},"core":{"sourceId":"Item.fm99DaMBVVhlZSMV"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1675078427142,"modifiedTime":1682324899516,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"WZZD52cieHIRUviH","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
{"name":"Secundus Portal Dagger v2","type":"weapon","img":"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-secundus.webp","system":{"description":{"value":"<p><em>Weapon (dagger), rare (requires attunement)</em></p><div class=\"block purple\" id=\" \" style=\"background:#aa88aa55\"><p><em>“The four ancient knives, whose power spans the planes of existence, are said to contain a secret knowledge that is older than time itself. Those who unlock their secrets will gain access to a realm of power and knowledge beyond the comprehension of mortal minds.”</em></p></div><hr /><p>You gain a +2 bonus to attack and damage rolls made with this magic weapon.</p><p>The Prime, Secundus, Tertius, and Quartus knives are powerful items, each imbued with a unique ability to open a portal to the next knife’s location. When inserted into any wall, the Prime knife will open a portal to the Secundus knife, the Secundus knife will open a portal to the Tertius knife, and so on. With the Quartus knife, the portal will take the user back to the location of the Prime knife.</p><p>A strong connection is formed between you and the dagger once the portal is opened and only you can retrieve the blade from its resting place.</p><img src=\"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-secundus.webp\" alt=\"Secundus Dagger\" /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":1,"price":{"value":0,"denomination":"gp"},"attunement":1,"equipped":false,"rarity":"veryRare","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":20,"long":60,"units":"ft"},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"mwak","attackBonus":"2","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["1d4 + @mod +2","piercing"]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"dagger","properties":{"fin":true,"lgt":true,"thr":true,"amm":false,"hvy":false,"fir":false,"foc":false,"lod":false,"rch":false,"rel":false,"ret":false,"spc":false,"two":false,"ver":false,"mgc":true,"ada":false,"sil":false},"proficient":true},"effects":[{"label":"Secundus Portal Effect (do not touch this)","icon":"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-secundus.webp","origin":"Item.Z7OIRPYCS5BmmL9o","duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"disabled":false,"_id":"CtMLw0Io4GSL32bl","changes":[],"tint":null,"transfer":true,"flags":{"times-up":{},"dfreds-convenient-effects":{"description":"Creates the gate to Tertius"},"dae":{"selfTarget":false,"selfTargetAlways":false,"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[]},"core":{"statusId":""},"ActiveAuras":{"isAura":false,"aura":"None","radius":"undefined","alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false},"effectmacro":{"onDelete":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Secundus Portal Dagger v1\";\nconst featName = \"Secundus Portal (Active Ability)\";\n\nconst primePortalfeat = actor.items.getName(featName);\nif (primePortalfeat) {\n  primePortalfeat.delete();\n  console.log(`${orgName} | ${featName} was deleted!`);\n} else {\n  console.log(`${orgName} | ${featName} not found`);\n}\n"},"onEnable":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Secundus Portal Dagger v2\";\nconst featName = \"Secundus Portal (Active Ability)\";\nconst itemNameNormalized = \"Secundus Portal Dagger\";\nconst nextItemNameNormalized = \"Tertius\";\nlet featExists = false;\n\nactor.items.forEach(function (item) {\n  if (item.name === featName && item.type === \"feat\") {\n    console.log(`${orgName} | Feat ${featName} already exists`);\n    featExists = true;\n  }\n});\n\nif (featExists) return;\n\nconst secundusPortalfeat = {\n  name: featName,\n  type: \"feat\",\n  system: {\n    description: {\n      value: `<p>As you grip the hilt of the <strong>${itemNameNormalized}</strong>, you feel its magical energy coursing through your veins. With a flick of the wrist, you throw the blade towards the wall before you. The air shimmers and ripples, as if it were a pool of water disturbed by a stone. Suddenly, a circular portal opens before you, leading to the location of the <strong>${nextItemNameNormalized}</strong> knife. You feel a powerful bond being formed between the dagger and yourself, assuring that only you can retrieve the blade from its resting place. No matter where the <strong>${nextItemNameNormalized}</strong> knife may be, the <strong>${itemNameNormalized}</strong> serves as a guide, unlocking the path to your next destination.</p>`,\n      chat: \"\",\n      unidentified: \"\",\n    },\n    source: itemName,\n    activation: {\n      type: \"action\",\n      cost: 1,\n      condition: \"\",\n    },\n    duration: {\n      value: \"\",\n      units: \"\",\n    },\n    target: {\n      value: null,\n      width: null,\n      units: \"\",\n      type: \"\",\n    },\n    range: {\n      value: 20,\n      long: 40,\n      units: \"ft\",\n    },\n    uses: {\n      value: null,\n      max: \"\",\n      per: \"\",\n      recovery: \"\",\n    },\n    consume: {\n      type: \"\",\n      target: \"\",\n      amount: null,\n    },\n    ability: \"\",\n    actionType: \"other\",\n    attackBonus: \"\",\n    chatFlavor: \"\",\n    critical: {\n      threshold: null,\n      damage: \"\",\n    },\n    damage: {\n      parts: [],\n      versatile: \"\",\n    },\n    formula: \"\",\n    save: {\n      ability: \"\",\n      dc: null,\n      scaling: \"spell\",\n    },\n    type: {\n      value: \"feat\",\n      subtype: \"\",\n    },\n    requirements: \"\",\n    recharge: {\n      value: null,\n      charged: false,\n    },\n  },\n  img: \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-secundus-ability.webp\",\n  effects: [],\n  folder: null,\n  sort: 0,\n  flags: {\n    \"midi-qol\": {\n      effectActivation: false,\n      onUseMacroName: \"[templatePlaced]ItemMacro\",\n    },\n    itemacro: {\n      macro: {\n        name: \"Secundus Portal (Active Ability)\",\n        type: \"script\",\n        scope: \"global\",\n        command:\n          'const orgName = \"Boss Loot\";\\nconst itemName = \"Secundus Portal Dagger v2\";\\nconst itemNameNormalized = \"Secundus Portal Dagger\";\\nconst nextItemName = \"Tertius Portal Dagger\";\\nconst portalName = \"Secundus Portal\";\\nconst portalId = \"Secundus-Portal\";\\nconst nextPortalId = \"Tertius-Portal\";\\nconst info = args[0];\\nconst chatMessage = game.messages.get(info.itemCardId);\\nconst chatMessageContent = chatMessage.content;\\nconst distanceAvailable = info.item.system.range.long;\\nconst artWorkChatTitle = \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-static-portal-dagger-secundus.webp\";\\nconst artWorkChatCardStormforgerStaff = \"modules/boss-loot-magic-items-free/artwork/006-portal-daggers/art-animated-for-chat-portal-dagger-secundus.gif\";\\nconst textToAppend = \\'<hr><img src=\"\\' + artWorkChatCardStormforgerStaff + \\'\" width=\"272\" height=\"272\"/>\\';\\n\\nconst abilitySelection = `<div class=\"dnd5e chat-card item-card midi-qol-item-card\">\\n    <header class=\"card-header flexrow\">\\n      <img src=\"${artWorkChatTitle}\" title=\"${itemNameNormalized}\" width=\"36\" height=\"36\" />\\n      <h3 class=\"item-name\">${itemNameNormalized}</h3>\\n    </header>\\n    <div class=\"card-content\">\\n      <p style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Bold}\">Do you want to enter in portal or pull the dagger and close the portal?</p>\\n      <br />\\n    </div>\\n    </div>`;\\n\\n//------------------------\\n// F U N C T I O N S\\n//-----------\\nfunction isPointInSquare(point, tokenDocument) {\\n  const gridSize = canvas.scene.grid.size;\\n  const h = tokenDocument.height * gridSize;\\n  const w = tokenDocument.width * gridSize;\\n  const { x: x0, y: y0 } = point;\\n  const { x: x1, y: y1 } = tokenDocument;\\n  const x2 = tokenDocument.x + w;\\n  const y2 = tokenDocument.y;\\n  const x3 = tokenDocument.x + w;\\n  const y3 = tokenDocument.y + h;\\n  const x4 = tokenDocument.x;\\n  const y4 = tokenDocument.y + h;\\n\\n  const minX = Math.min(x1, x2, x3, x4);\\n  const maxX = Math.max(x1, x2, x3, x4);\\n  const minY = Math.min(y1, y2, y3, y4);\\n  const maxY = Math.max(y1, y2, y3, y4);\\n\\n  return x0 >= minX && x0 <= maxX && y0 >= minY && y0 <= maxY;\\n}\\n\\nasync function teleportToken(tokenDoc, position = undefined) {\\n  if (position) {\\n    console.log(`${orgName} | ${tokenDoc.name} will teleport to ${nextPortalId}`);\\n    const portalCoords = { x: position.data.source.x, y: position.data.source.y };\\n\\n    await new Sequence().animation().on(tokenDoc).opacity(0).animation().on(tokenDoc).teleportTo(portalCoords, { delay: 450 }).snapToGrid().closestSquare().waitUntilFinished().animation().on(tokenDoc).opacity(1).play();\\n  }\\n}\\n\\nasync function initiateDialog(tokenDoc, position) {\\n  await new Dialog(\\n    {\\n      title: \"Ability\",\\n      content: abilitySelection,\\n      buttons: {\\n        button1: {\\n          icon: \"<i class=\\'fa-light fa-person-to-portal\\'></i>\",\\n          label: \"Enter Portal\",\\n          callback: async () => await teleportToken(tokenDoc, position),\\n        },\\n        button2: {\\n          icon: \"<i class=\\'fa-light fa-dagger\\'></i>\",\\n          label: \"Pull the dagger\",\\n          callback: async () => {\\n            /// HOOK OFF\\n            Hooks.off(\"updateToken\", game.SecundusPortalDaggerHookClientSpecificId);\\n            console.log(`${orgName} | Deleted the Hook \"updateToken\" with ID = ${game.SecundusPortalDaggerHookClientSpecificId}`);\\n            delete game.SecundusPortalDaggerHookClientSpecificId;\\n\\n            await Sequencer.EffectManager.endEffects({ name: portalId });\\n            await Sequencer.EffectManager.endEffects({ name: itemName });\\n            const message = `<p>With a firm grip, you grasp the hilt of the <strong>${itemNameNormalized}</strong> and give it a sharp tug. The blade easily slides out of the wall, the portal it had opened closing in an instant. The magical bond between the dagger and yourself remains, its power still pulsing within you. You secure the blade at your side, ready to use its power again in your journey.</p>`;\\n            await createChatMessage(\"\", message);\\n            // Create the item in player\\'s inventory\\n            const daggerItem = game.items.getName(itemName);\\n            await actor.createEmbeddedDocuments(\"Item\", [daggerItem]);\\n            const equippedDaggerItem = actor.items.getName(itemName);\\n            equippedDaggerItem?.update({ \"system.attunement\": CONFIG.DND5E.attunementTypes.ATTUNED, \"system.equipped\": true });\\n          },\\n        },\\n      },\\n    },\\n    { width: 500 }\\n  ).render(true);\\n}\\n\\nasync function createChatMessage(summary, msg, img = true) {\\n  const artwork = img ? `<img src=${artWorkChatCardStormforgerStaff} title=${itemNameNormalized} width=\"272\" height=\"272\" />` : \"\";\\n  const chatPrimalDaggers = {\\n    content: `\\n  <div class=\"dnd5e chat-card item-card midi-qol-item-card\">\\n    <header class=\"card-header flexrow\">\\n      <img src=${artWorkChatTitle} title=\"${itemNameNormalized}\" width=\"36\" height=\"36\" />\\n      <h3 class=\"item-name\">${itemNameNormalized} ${summary}</h3>\\n    </header>\\n    <div class=\"card-content\">\\n      ${msg}\\n    </div>\\n    <hr>\\n      ${artwork}\\n    <footer class=\"card-footer\"><span>${itemNameNormalized}</span></footer>\\n  </div>`,\\n    type: CONST.CHAT_MESSAGE_TYPES.OOC,\\n  };\\n  await ChatMessage.create(chatPrimalDaggers);\\n}\\n\\nasync function checkDistance(crosshairs) {\\n  while (crosshairs.inFlight) {\\n    //wait for initial render\\n    await warpgate.wait(100);\\n\\n    const ray = new Ray(token.center, crosshairs);\\n    const distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0];\\n\\n    //only update if the distance has changed\\n    if (crosshairsDistance !== distance) {\\n      crosshairsDistance = distance;\\n      if (distance > distanceAvailable) {\\n        crosshairs.icon = \"icons/svg/hazard.svg\";\\n      } else {\\n        crosshairs.icon = info.item.img;\\n      }\\n\\n      crosshairs.draw();\\n      crosshairs.label = `${distance} ft`;\\n    }\\n  }\\n}\\n\\n//------------------------\\n// P R E C H E C K S\\n//-----------\\nconst portal1 = Sequencer.EffectManager.getEffects({ name: portalId });\\nif (portal1.length > 0) {\\n  ui.notifications.warn(`${portalName} already exist!`);\\n  return;\\n}\\n\\n//------------------------\\n// M A I N\\n//-----------\\nlet crosshairsDistance = 0;\\nconst portal1Template = await warpgate.crosshairs.show(\\n  {\\n    interval: token.document.width % 2 === 0 ? 1 : -1,\\n    size: token.document.width,\\n    icon: info.item.img,\\n    label: \"0 ft.\",\\n  },\\n  {\\n    show: checkDistance,\\n  }\\n);\\n\\n// Exit if\\nif (portal1Template.cancelled || crosshairsDistance > distanceAvailable) {\\n  return;\\n}\\n\\nconst portal1Coords = { x: portal1Template.x, y: portal1Template.y };\\n\\ngame.SecundusPortalDaggerHookClientSpecificId = Hooks.on(\"updateToken\", async (tokenDoc, updateData) => {\\n  // Movement guard\\n  const inPortalRange = isPointInSquare(portal1Coords, tokenDoc);\\n  const portal2Position = Sequencer.EffectManager.getEffects({ name: nextPortalId });\\n  const portal1Position = Sequencer.EffectManager.getEffects({ name: portalId });\\n  if (inPortalRange && portal2Position.length === 1 && portal1Position.length === 1 && (!isNaN(updateData.x) || !isNaN(updateData.y))) {\\n    if (tokenDoc.uuid === token.document.uuid) {\\n      await initiateDialog(tokenDoc, portal2Position[0]);\\n    } else {\\n      await teleportToken(tokenDoc, portal2Position[0]);\\n    }\\n  } else if (inPortalRange && portal2Position.length !== 1 && portal1Position.length === 1 && (!isNaN(updateData.x) || !isNaN(updateData.y))) {\\n    if (tokenDoc.uuid === token.document.uuid) {\\n      await initiateDialog(tokenDoc);\\n    }\\n    console.log(`${orgName} | ${tokenDoc.name} is in front of ${portalName} but there is no destination portal!`);\\n  }\\n});\\n\\nconsole.log(`${orgName} | Create the Hook \"updateToken\" with ID = ${game.SecundusPortalDaggerHookClientSpecificId}`);\\n\\n//------------------------\\n// V I S U A L S\\n//-----------\\nconst parser = new DOMParser();\\nconst doc = parser.parseFromString(chatMessageContent, \"text/html\");\\nconst cardContent = doc.querySelector(\".card-content\");\\ncardContent.insertAdjacentHTML(\"beforeend\", textToAppend);\\nconst result = doc.documentElement.outerHTML;\\nchatMessage.content = result;\\nawait chatMessage.update();\\n\\n// Select file for portal\\nconst jb2aId = \"jb2a_patreon\";\\nlet jb2aPortalBrightYellow = \"\";\\nif (game.modules.get(jb2aId)?.active) {\\n  jb2aPortalBrightYellow = \"jb2a.portals.vertical.ring.yellow\";\\n} else {\\n  jb2aPortalBrightYellow = \"jb2a.portals.vertical.ring.bright_yellow\";\\n}\\n\\nnew Sequence()\\n\\n  //Impact\\n  .effect()\\n  .file(\"jb2a.impact.010.orange\")\\n  // modules/JB2A_DnD5e/Library/Generic/Impact/Impact_10_Regular_Orange_400x400.webm\\n  .atLocation(token)\\n  .scaleToObject(2)\\n  .scaleOut(0, 250)\\n  .randomRotation()\\n\\n  //Dagger Throw\\n  .effect()\\n  .file(\"jb2a.dagger.throw.01.white\")\\n  .name(itemName)\\n  .atLocation(token)\\n  .template({ gridSize: 200, startPoint: 200, endPoint: 200 })\\n  .stretchTo(portal1Template, { onlyX: true })\\n  .filter(\"ColorMatrix\", { brightness: 1, contrast: 2, saturate: -1 })\\n  .spriteOffset({ x: 0.5 }, { gridUnits: true })\\n  .endTimePerc(0.9)\\n  .persist()\\n  .noLoop()\\n  .zIndex(1)\\n\\n  //Flash\\n  .effect()\\n  .from(token)\\n  .atLocation(token)\\n  .filter(\"ColorMatrix\", { saturate: -1, brightness: 10 })\\n  .scaleToObject(1)\\n  .filter(\"Blur\", { blurX: 5, blurY: 10 })\\n  .duration(600)\\n  .scaleOut(0, 500, { ease: \"easeOutCubic\" })\\n  .fadeOut(600)\\n  .waitUntilFinished(500)\\n\\n  //Portal\\n  .effect()\\n  .file(jb2aPortalBrightYellow)\\n  // modules/JB2A_DnD5e/Library/Generic/Portals/Portal_Bright_Yellow_V_400x250.webm\\n  .name(portalId)\\n  .filter(\"ColorMatrix\", { brightness: 1, contrast: 1, saturate: -2 })\\n  .atLocation(portal1Template)\\n  .scale(0.7)\\n  .scaleIn(0, 500, { ease: \"easeOutCubic\" })\\n  .scaleOut(0, 500, { ease: \"easeInQuint\" })\\n  .rotateTowards(token, { cacheLocation: true })\\n  .spriteRotation(90)\\n  .anchor({ x: 0.6, y: 0.5 })\\n  .belowTokens()\\n  .persist()\\n\\n  .play();\\n\\n// Delete the dagger from Inventory\\nconst itemToDelete = actor.items.getName(itemName);\\nif (itemToDelete) {\\n  itemToDelete.delete();\\n  console.log(`${orgName} | Deleted item ${itemName} from inventory of ${info.actor.name}`);\\n} else {\\n  console.log(`${orgName} | Could not find item ${itemName} in player\\'s inventory! Item was not deleted!`);\\n}',\n        _id: null,\n        img: \"icons/svg/dice-target.svg\",\n        folder: null,\n        sort: 0,\n        ownership: {\n          default: 0,\n        },\n      },\n    },\n  },\n};\n\nactor.createEmbeddedDocuments(\"Item\", [secundusPortalfeat]);\n"},"onDisable":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Secundus Portal Dagger v1\";\nconst featName = \"Secundus Portal (Active Ability)\";\n\nconst primePortalfeat = actor.items.getName(featName);\nif (primePortalfeat) {\n  primePortalfeat.delete();\n  console.log(`${orgName} | ${featName} was deleted!`);\n} else {\n  console.log(`${orgName} | ${featName} not found`);\n}\n"}}}}],"flags":{"core":{"sourceId":"Compendium.dnd5e.items.Lr8aRsnia8hftPAb"},"midi-qol":{"fumbleThreshold":null,"effectActivation":false},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"autoFailFriendly":false,"autoSaveFriendly":false,"rollOther":false,"critOther":false,"offHandWeapon":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.5"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1661787233621,"modifiedTime":1682324899521,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"Z7OIRPYCS5BmmL9o","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
{"name":"Stormforger v1","type":"weapon","img":"modules/boss-loot-magic-items-free/artwork/005-stormforger/art-static-stormforger-staff.webp","system":{"description":{"value":"<p><em>Weapon (quarterstaff), legendary (requires attunement by a sorcerer, warlock, druid or wizard)</em></p><div class=\"block purple\" id=\" \" style=\"background:#aa88aa55\"><p><em>“\"Behold the power of the great storm!\" the wizard shouted, as the orb on top of the staff began to swirl with a furious intensity. \"Feel its wrath, and fear its might!\" The air around crackled with raw energy, and the winds began to howl. Lightning bolts flew from the staff, crashing into the ground and sending shock waves through the air. The storm was coming, and no one could stand in its way.”</em></p></div><hr /><p>The Stormforger is a majestic weapon, carved from a single piece of ancient, lightning-struck wood. The staff's surface is adorned with intricate engravings of swirling winds and bolts of lightning, and it is topped with a large, glowing orb made of pure crystal. The orb pulsates with energy, and it can be seen to contain miniature tempests within it. The staff is lightweight and it gives off a faint hum when held.</p><p>This staff is not made for melee attack but while you hold it, you gain a +2 bonus to range spell attack rolls.</p><p>The staff has 10 charges. It regains 1d4 + 2 expended charges after a long rest. If you expend the last charge, roll a d20. On a 20, the staff regains 2d4 + 2 charges.</p><hr /><p>While holding the staff, you can use an action to expend some of its charges to cast one of the following abilities from it, using your spell save DC and spellcasting ability modifier:</p><p><strong>Tornado Takedown</strong>: Expending 2 charges allows the wielder to summon a tornado that travels to a creature within 60 feet. The creature must make a Dexterity saving throw, on a failed save it takes [[/r 1d6]] bludgeoning damage and [[/r 2d6]] lightning damage, and is @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated} until the end of your next turn. On a successful save it takes half as much damage and is not @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated}.</p><p><strong>Aerial Ascension</strong>: Expending 5 charges allows the wielder to harness the power of the tempest, summoning a whirlwind beneath their feet and allowing them to fly for 10 minutes. The maximum altitude that can be reached while flying is 30 feet.</p><p><strong>Thunderstorm of Misery</strong>: Expending 9 charges allows the wielder to unleash the full potential of the Stormforger, summoning a powerful storm that rages around them in a 50-foot radius for 1 minute. The storm creates dangerous terrain, making the ground slippery and filled with debris, making it difficult for creatures within the area of effect to move around. The howling winds, lightning strikes and heavy rain make it hard for creatures to see or hear, imposing disadvantage on any perception checks made while within the storm. The storm also unleashes bolts of lightning, forcing creatures within the affected area, to make a Dexterity saving throw. On a failed save they take [[/r 8d6]] lightning damage, or half as much on a successful one.</p><img src=\"modules/boss-loot-magic-items-free/artwork/005-stormforger/art-static-stormforger-staff.webp\" alt=\"Stormforger\" /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":1,"price":{"value":0,"denomination":"gp"},"attunement":1,"equipped":false,"rarity":"legendary","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":5,"long":null,"units":"ft"},"uses":{"value":10,"max":"10","per":"charges","recovery":"1d6 + 2"},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":"2","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":null},"hp":{"value":null,"max":null,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"quarterstaff","properties":{"ada":false,"amm":false,"fin":false,"fir":false,"foc":false,"hvy":false,"lgt":false,"lod":false,"mgc":true,"rch":false,"rel":false,"ret":false,"sil":false,"spc":false,"thr":false,"two":false,"ver":false},"proficient":true},"effects":[{"label":"Stormforger Range Spell Attack Bonus","icon":"modules/boss-loot-magic-items-free/artwork/005-stormforger/art-static-range-spell-attack-bonus-effect.webp","origin":"Item.coj1iGcZhawzL4HQ","duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"disabled":false,"_id":"tbINrH7LfmoXQVgr","changes":[{"key":"system.bonuses.rsak.attack","mode":2,"value":"2","priority":20}],"tint":null,"transfer":true,"flags":{"times-up":{},"dfreds-convenient-effects":{"description":""},"dae":{"selfTarget":false,"selfTargetAlways":false,"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[]},"core":{"statusId":""},"ActiveAuras":{"isAura":false,"aura":"None","radius":"undefined","alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false}}}],"flags":{"scene-packer":{"hash":"c09d1672b3cb7a5851200bc13573f50fdb5a703e","sourceId":"Item.mNMKJ6c2hIGCxM4G"},"midi-qol":{"fumbleThreshold":null,"effectActivation":false,"onUseMacroName":"[preItemRoll]ItemMacro"},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"autoFailFriendly":false,"autoSaveFriendly":false,"rollOther":false,"critOther":false,"offHandWeapon":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false},"itemacro":{"macro":{"name":"Stormforger v1","type":"script","scope":"global","command":"const orgName = \"Boss Loot\";\nconst itemName = \"Stormforger\";\nconst tornadoTakedownName = \"Tornado Takedown\";\nconst aerialAscensionName = \"Aerial Ascension\";\nconst thunderstormOfMiseryName = \"Thunderstorm of Misery\";\nconst info = args[0];\nconst usesCount = info.itemData.system.uses.value;\nconst artWorkChatTitle = \"modules/boss-loot-magic-items-free/artwork/005-stormforger/art-static-stormforger-staff.webp\";\nconst artWorkChatCardStormforgerStaff = \"modules/boss-loot-magic-items-free/artwork/005-stormforger/art-animated-for-chat-stormforger-staff.gif\";\nconst artWorktornadoTakedownItem = \"modules/boss-loot-magic-items-free/artwork/005-stormforger/art-satic-tornadon-takedown-effect.webp\";\nconst artWorkthunderstormOfMiseryFeat = \"modules/boss-loot-magic-items-free/artwork/005-stormforger/art-static-thunderstorm-of-misery-effect.webp\";\n\nconst tornadoTakedownItem = {\n  name: \"Stormforger (Tornado Takedown)\",\n  type: \"weapon\",\n  system: {\n    description: {\n      value:\n        '<p><strong>Tornado Takedown</strong>: Expending 2 charges allows the wielder to summon a tornado that travels to a creature within 60 feet. The creature must make a Dexterity saving throw, on a failed save it takes [[/r 1d6]] bludgeoning damage and [[/r 2d6]] lightning damage, and is @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated} until the end of your next turn. On a successful save it takes half as much damage and is not @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated}.</p><hr><img src=\"modules/boss-loot-magic-items-free/artwork/005-stormforger/art-animated-for-chat-stormforger-staff.gif\" title=\"Stormforger\" width=\"272\" height=\"272\" />',\n      chat: \"\",\n      unidentified: \"\",\n    },\n    source: \"Boss Loot\",\n    quantity: 1,\n    weight: 0,\n    attunement: 2,\n    equipped: true,\n    rarity: \"legendary\",\n    identified: true,\n    activation: {\n      type: \"action\",\n      cost: 1,\n      condition: \"\",\n    },\n    duration: {\n      value: \"\",\n      units: \"\",\n    },\n    target: {\n      value: 1,\n      width: null,\n      units: \"ft\",\n      type: \"radius\",\n    },\n    range: {\n      value: 60,\n      long: 60,\n      units: \"ft\",\n    },\n    uses: {\n      value: null,\n      max: \"\",\n      per: \"\",\n      recovery: \"\",\n    },\n    ability: \"\",\n    actionType: \"save\",\n    damage: {\n      parts: [\n        [\"1d6 + 2\", \"bludgeoning\"],\n        [\"2d6\", \"lightning\"],\n      ],\n      versatile: \"\",\n    },\n    formula: \"\",\n    save: {\n      ability: \"dex\",\n      dc: null,\n      scaling: \"spell\",\n    },\n    weaponType: \"simpleM\",\n    baseItem: \"quarterstaff\",\n    properties: {\n      ada: false,\n      amm: false,\n      fin: false,\n      fir: false,\n      foc: false,\n      hvy: false,\n      lgt: false,\n      lod: false,\n      mgc: true,\n      rch: false,\n      rel: false,\n      ret: false,\n      sil: false,\n      spc: false,\n      thr: false,\n      two: false,\n      ver: false,\n    },\n    proficient: false,\n  },\n  img: artWorktornadoTakedownItem,\n  effects: [\n    {\n      label: \"Tornado Takedown (Temporary Effect)\",\n      icon: artWorktornadoTakedownItem,\n      duration: {\n        rounds: 1,\n        startTime: null,\n        seconds: null,\n        combat: null,\n        turns: null,\n        startRound: null,\n        startTurn: null,\n      },\n      disabled: false,\n      changes: [\n        {\n          key: \"macro.CE\",\n          mode: 0,\n          value: \"Incapacitated\",\n          priority: 20,\n        },\n      ],\n      tint: null,\n      transfer: false,\n      flags: {\n        effectmacro: {\n          onDelete: {\n            script: \"await Sequencer.EffectManager.endEffects({ name: 'Tornado-Takedown' });\",\n          },\n        },\n      },\n    },\n  ],\n  folder: null,\n  sort: 0,\n  flags: {\n    \"midi-qol\": {\n      effectActivation: false,\n      onUseMacroName: \"[postSave]ItemMacro,[templatePlaced]ItemMacro\",\n    },\n    itemacro: {\n      macro: {\n        name: \"Stormforger (Tornado Takedown)\",\n        type: \"script\",\n        scope: \"global\",\n        command:\n          'const info = args[0];\\nconst staffItemId = info.item._id;\\n\\nfunction deleteItem(id) {\\n  const staffItem = actor.items.get(id);\\n  staffItem?.delete();\\n}\\n\\nif (info.macroPass === \"templatePlaced\") {\\n  const target = { x: info.workflow.templateData.x, y: info.workflow.templateData.y };\\n  // Delete the Template\\n  await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [info.templateId]);\\n  const p = info.targets.length === 0 ? false : true;\\n  new Sequence()\\n    .effect()\\n    .name(\"Tornado-Takedown\")\\n    .file(\"jb2a.whirlwind.bluegrey\")\\n    .atLocation(token)\\n    .moveTowards(target, { ease: \"easeOutSine\" })\\n    .moveSpeed(300)\\n    .scaleIn(0, 1000, { ease: \"easeOutSine\" })\\n    .loopProperty(\"sprite\", \"position.y\", { values: [25, -25], duration: 3000, pingPong: true, ease: \"easeInOutSine\" })\\n    .randomizeMirrorX()\\n    .scaleToObject(2)\\n    .persist(p)\\n    .play();\\n  if (!p) deleteItem(staffItemId);\\n}\\n\\nif (info.macroPass === \"postSave\") {\\n  if (info.failedSaves.length === 0) {\\n    await Sequencer.EffectManager.endEffects({ name: \"Tornado-Takedown\" });\\n  }\\n  deleteItem(staffItemId);\\n}',\n        _id: null,\n        img: \"icons/svg/dice-target.svg\",\n        folder: null,\n      },\n    },\n  },\n};\n\nconst thunderstormOfMiseryFeat = {\n  name: \"Thunderstorm of Misery (Active Ability)\",\n  type: \"feat\",\n  system: {\n    description: {\n      value:\n        \"<p><strong>Thunderstorm of Misery (Active Ability)</strong>: Expending 9 charges allows the wielder to unleash the full potential of the Stormbringer Staff, summoning a powerful storm that rages around them in a 50-foot radius for 1 minute. The storm creates dangerous terrain, making the ground slippery and filled with debris, making it difficult for creatures within the area of effect to move around. The howling winds, lightning strikes and heavy rain make it hard for creatures to see or hear, imposing disadvantage on any perception checks made while within the storm. The storm also unleashes bolts of lightning, forcing creatures within the affected area, to make a Dexterity saving throw. On a failed save they take [[/r 8d6]] lightning damage, or half as much damage on a successful one.</p>\",\n      chat: \"\",\n      unidentified: \"\",\n    },\n    source: \"Stormforger\",\n    activation: {\n      type: \"action\",\n      cost: 1,\n      condition: \"\",\n    },\n    duration: {\n      value: \"10\",\n      units: \"round\",\n    },\n    target: {\n      value: 50,\n      width: null,\n      units: \"ft\",\n      type: \"creature\",\n    },\n    range: {\n      value: null,\n      long: null,\n      units: \"\",\n    },\n    uses: {\n      value: null,\n      max: \"\",\n      per: \"\",\n      recovery: \"\",\n    },\n    consume: {\n      type: \"\",\n      target: \"\",\n      amount: null,\n    },\n    ability: \"\",\n    actionType: \"save\",\n    attackBonus: \"\",\n    chatFlavor: \"\",\n    critical: {\n      threshold: null,\n      damage: \"\",\n    },\n    damage: {\n      parts: [[\"8d6\", \"lightning\"]],\n      versatile: \"\",\n    },\n    formula: \"\",\n    save: {\n      ability: \"dex\",\n      dc: null,\n      scaling: \"spell\",\n    },\n    type: {\n      value: \"feat\",\n      subtype: \"\",\n    },\n    requirements: \"9 Charges\",\n    recharge: {\n      value: null,\n      charged: false,\n    },\n  },\n  img: artWorkthunderstormOfMiseryFeat,\n  effects: [\n    {\n      label: \"Thunderstorm of Misery (Temporary Effect)\",\n      icon: artWorkthunderstormOfMiseryFeat,\n      duration: {\n        rounds: 10,\n      },\n      disabled: false,\n      changes: [],\n      tint: null,\n      transfer: false,\n      flags: {\n        dae: {\n          selfTargetAlways: true,\n        },\n        effectmacro: {\n          onDelete: {\n            script: 'const thunderFeat = arguments[4];\\nawait Sequencer.EffectManager.endEffects({ name: \"Thunderstorm-of-Misery\" });\\nthunderFeat?.delete();\\n',\n          },\n        },\n      },\n    },\n  ],\n  folder: null,\n  sort: 0,\n  flags: {\n    \"midi-qol\": {\n      effectActivation: false,\n      onUseMacroName: \"[templatePlaced]ItemMacro\",\n    },\n    midiProperties: {\n      magicdam: true,\n    },\n    itemacro: {\n      macro: {\n        name: \"Thunderstorm of Misery (Active Ability)\",\n        type: \"script\",\n        scope: \"global\",\n        command:\n          'new Sequence()\\n .effect()\\n .name(\"Thunderstorm-of-Misery\")\\n .file(\"jb2a.call_lightning.low_res.blueorange\")\\n .atLocation(token)\\n .aboveLighting()\\n .scale(2.3)\\n .opacity(0.90)\\n .fadeIn(3000)\\n .fadeOut(400, {ease: \"easeOutCirc\", delay: 2000})\\n .persist()\\n.play();',\n        _id: null,\n        img: \"icons/svg/dice-target.svg\",\n        folder: null,\n        sort: 0,\n        ownership: {\n          default: 0,\n        },\n        flags: {},\n      },\n    },\n  },\n};\n\n//------------------------\n// F U N C T I O N S\n//-----------\nasync function consumeCharge(n) {\n  const newUses = usesCount - n;\n  if (newUses < 0) return false;\n\n  console.log(`${orgName} | Updating charges from ${usesCount} to ${newUses}`);\n  await actor.items.get(info.item._id).update({ \"system.uses.value\": newUses });\n\n  if (newUses === 0) await addRandomCharge();\n  return true;\n}\n\nasync function addRandomCharge() {\n  const flavorText = \"<p>If you expend the last charge, roll a d20. On a 20, the staff regains 2d4 + 2 charges.</p>\";\n  const roll1 = new Roll(\"1d20\").evaluate({ async: false });\n  const chatForZeroCharges = await roll1.toMessage({\n    flavor: flavorText,\n    speaker: ChatMessage.getSpeaker({ actor: token.actor }),\n  });\n\n  // Add some charges\n  if (roll1._total === 20) {\n    const roll2 = new Roll(\"2d4 + 2\").evaluate({ async: false });\n    await actor.items.get(info.item._id).update({ \"system.uses.value\": roll2._total });\n    await game.messages.get(chatForZeroCharges._id).update({ flavor: `${flavorText}<p style=\"color: #E94560;\">You regained ${roll2._total} charges.</p>` });\n    await game.messages.get(chatForZeroCharges._id).update({ rolls: [JSON.stringify(roll1), JSON.stringify(roll2)] });\n  }\n}\n\nasync function useTornadoTakedown() {\n  const remainingCharges = await consumeCharge(2);\n  if (!remainingCharges) {\n    ui.notifications.warn(`Not enough charges to use ${tornadoTakedownName}`);\n    return;\n  }\n  // Check if item already exist\n  let newItem = actor.items.getName(tornadoTakedownItem.name);\n\n  if (!newItem) {\n    // Create new Item5e\n    console.log(`${orgName} | Creating new item ${tornadoTakedownItem.name}`);\n    await actor.createEmbeddedDocuments(\"Item\", [tornadoTakedownItem]);\n    newItem = actor.items.getName(tornadoTakedownItem.name);\n  }\n\n  await newItem.use({}, { configureDialog: false });\n}\n\nasync function useAerialAscension() {\n  if (aerialAscensionAnimation.length > 0) {\n    Sequencer.EffectManager.endEffects({ name: \"Aerial-Ascension\" });\n\n    //Turn Token visible\n    new Sequence().animation().on(token).opacity(1).play();\n\n    token.document.update({ elevation: 0 });\n  } else {\n    const remainingCharges = await consumeCharge(5);\n    if (!remainingCharges) {\n      ui.notifications.warn(`Not enough charges to use ${aerialAscensionName}`);\n      return;\n    }\n    token.document.update({ elevation: token.document.elevation + 30 });\n\n    //Tornado\n    new Sequence().effect().name(\"Aerial-Ascension\").file(\"jb2a.whirlwind.bluegrey\").scale(0.6).atLocation(token).attachTo(token, { bindVisibility: false, followRotation: false }).opacity(0.6).persist().zIndex(1).play();\n\n    //Turn Token invisible\n    new Sequence()\n      .animation()\n      .on(token)\n      .opacity(0)\n      //MAKE A FAKE TOKEN AND ANIMATE IT\n      .effect()\n      .name(\"Aerial-Ascension\")\n      .from(token)\n      .attachTo(token, { bindVisibility: true })\n      .loopProperty(\"spriteContainer\", \"position.x\", { values: [0, 25, -25, 0], duration: 10000, pingPong: true })\n      .loopProperty(\"spriteContainer\", \"position.y\", { values: [0, -5, 5, -10, 10], duration: 1500, pingPong: true, ease: \"easeInOutSine\" })\n      .persist()\n      .zIndex(2)\n      .play();\n\n    //FAKE TOKEN SHADOW ANIMATION\n    new Sequence()\n      .effect()\n      .name(\"Aerial-Ascension\")\n      .from(token)\n      .attachTo(token, { bindVisibility: true })\n      .opacity(0.8)\n      .scale(0.9)\n      .anchor({ x: 0.4, y: 0.1 })\n      .filter(\"ColorMatrix\", { brightness: -1 })\n      .filter(\"Blur\", { blurX: 5, blurY: 10 })\n      .loopProperty(\"spriteContainer\", \"position.x\", { values: [0, 25, -25, 0], duration: 10000, pingPong: true })\n      .loopProperty(\"spriteContainer\", \"position.y\", { values: [0, -5, 5, -10, 10], duration: 1500, pingPong: true, ease: \"easeInOutSine\" })\n      .persist()\n      .belowTokens()\n      .zIndex(0)\n      .play();\n  }\n}\n\nasync function useThunderstormOfMisery() {\n  const remainingCharges = await consumeCharge(9);\n  if (!remainingCharges) {\n    ui.notifications.warn(`Not enough charges to use ${thunderstormOfMiseryName}`);\n    return;\n  }\n  // Check if item already exist\n  let newItem = actor.items.getName(thunderstormOfMiseryFeat.name);\n\n  if (!newItem) {\n    // Create new Item5e\n    console.log(`${orgName} | Creating new item ${thunderstormOfMiseryFeat.name}`);\n    await actor.createEmbeddedDocuments(\"Item\", [thunderstormOfMiseryFeat]);\n    newItem = actor.items.getName(thunderstormOfMiseryFeat.name);\n  }\n\n  await newItem.use({}, { configureDialog: false });\n}\n\n//------------------------\n// A B I L I T Y     S E L E C T I O N\n//-----------\nfoundry.utils.setProperty(this.config, \"consumeUsage\", false);\n\nif (info.item.system.attunement !== CONFIG.DND5E.attunementTypes.ATTUNED || info.item.system.equipped === false) {\n  ui.notifications.warn(`Item \"${info.item.name}\" needs to be <strong>equipped</strong> and <strong>attuned</strong> before use!`);\n  return;\n}\n\nconst aerialAscensionAnimation = Sequencer.EffectManager.getEffects({ name: \"Aerial-Ascension\" });\nconst aerialAscensionText = aerialAscensionAnimation.length === 0 ? `Use ${aerialAscensionName} to rise (expending 5 charges)` : `Use ${aerialAscensionName} to descend (expending 0 charges)`;\nconst abilitySelection = `<div class=\"dnd5e chat-card item-card midi-qol-item-card\">\n    <header class=\"card-header flexrow\">\n      <img src=\"${artWorkChatTitle}\" title=\"${itemName}\" width=\"36\" height=\"36\" />\n      <h3 class=\"item-name\">${itemName}</h3>\n    </header>\n    <div class=\"card-content\">\n      <p style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Bold}\">1. Ranged Spell Attack: Use ${tornadoTakedownName} (expending 2 charges)</p>\n      <p style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Bold}\">2. ${aerialAscensionText}</p>\n      <p style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Bold}\">3. Use ${thunderstormOfMiseryName} (expending 9 charges)</p>\n      <br />\n      <p style=\"font-family: Arial; font-weight: ${CONST.FONT_WEIGHTS.Bold}; font-size: large;\"><strong>Choose wisely:</strong></p>\n    </div>\n    </div>`;\n\nnew Dialog(\n  {\n    title: \"Ability\",\n    content: abilitySelection,\n    buttons: {\n      button1: {\n        icon: \"<i class='fa-light fa-tornado'></i>\",\n        label: \"Tornado Takedown\",\n        callback: () => useTornadoTakedown(),\n      },\n      button2: {\n        icon: \"<i class='fa-light fa-hat-witch'></i>\",\n        label: \"Aerial Ascension\",\n        callback: () => useAerialAscension(),\n      },\n      button3: {\n        icon: \"<i class='fa-light fa-cloud-bolt'></i>\",\n        label: \"Thunderstorm of Misery\",\n        callback: async () => useThunderstormOfMisery(),\n      },\n    },\n  },\n  { width: 500 }\n).render(true);","author":"Iz3BYZWrVGwLMHiJ","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}},"core":{"sourceId":"Item.mNMKJ6c2hIGCxM4G"},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.5"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1674760065983,"modifiedTime":1682265170197,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"coj1iGcZhawzL4HQ","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
{"name":"Death Kiss Blade v1","type":"weapon","img":"modules/boss-loot-magic-items-free/artwork/009-death-kiss-blade/art-static-death-kiss-blade.webp","system":{"description":{"value":"<h4><em>Weapon (longsword), very rare (requires attunement)</em></h4><div class=\"block purple\" id=\" \" style=\"background:#aa88aa55\"><p><em>“I saw them surrounding the warrior who stood motionless with his black sword in hand, sheathed. Suddenly, they started falling to the ground. The attack was so fast that they didn’t even know what happened. The warrior, standing in the same place, this time holding the scabbard with one hand and the sword, which was full of blood, with the other, looking at me said, ‘go and tell those who want to face me that they will have the same fate’ and then I ran…”</em></p></div><hr /><h4>You gain a +1 bonus to attack and damage rolls made with this magic weapon.</h4><hr /><h4>The guard is crafted in the shape of a skull, its eye sockets glowing with an eerie red light. The blade itself is long and sleek, with a deadly razor-sharp edge.</h4><h4><strong>Finesse.</strong> When making an attack with a finesse weapon, you use your choice of your Strength or Dexterity modifier for the attack and damage rolls. You must use the same modifier for both rolls.</h4><h4><strong>Versatile.</strong> This weapon can be used with one or two hands. A damage value in parentheses appears with the property—the damage when the weapon is used with two hands to make a melee attack.</h4><hr /><h4><strong>Death Kiss Attack (Active Ability)</strong>: As an action you can perform this attack technique. You move so fast that you can make a single melee attack on all enemies within 20 feet of you in an instant. You can use this ability again after a long rest.</h4><img src=\"modules/boss-loot-magic-items-free/artwork/009-death-kiss-blade/art-static-death-kiss-blade.webp\" alt=\"Death Kiss Blade\" /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":2,"price":{"value":0,"denomination":"gp"},"attunement":1,"equipped":false,"rarity":"veryRare","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":5,"long":null,"units":"ft"},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"mwak","attackBonus":"1","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["1d8 + @mod +1","slashing"]],"versatile":"1d10 + @mod +1"},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"martialM","baseItem":"longsword","properties":{"ver":true,"amm":false,"hvy":false,"fin":true,"fir":false,"foc":false,"lgt":false,"lod":false,"rch":false,"rel":false,"ret":false,"spc":false,"thr":false,"two":false,"mgc":true,"ada":false,"sil":false},"proficient":false},"effects":[{"label":"Death Kiss Blade (do not touch this)","icon":"modules/boss-loot-magic-items-free/artwork/009-death-kiss-blade/art-static-death-kiss-blade.webp","origin":"Item.lCOB8K8gXKy2YCcX","duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"disabled":false,"_id":"fN8lKA87GOlGKsAy","changes":[],"tint":null,"transfer":true,"flags":{"times-up":{},"dfreds-convenient-effects":{"description":"test"},"dae":{"selfTarget":false,"selfTargetAlways":false,"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[]},"core":{"statusId":""},"ActiveAuras":{"isAura":false,"aura":"None","radius":"undefined","alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false},"effectmacro":{"onDelete":{"script":"const itemName = \"Death Kiss Blade\";\nconst featName = \"Death Kiss Attack (Active Ability)\";\n\nlet myItems = actor.items;\n\n// Remove the item from item list\nmyItems.forEach(function (item) {\n  item.name === featName && item.type === \"feat\" && actor.deleteEmbeddedDocuments(\"Item\", [item.id]);\n});\n"},"onEnable":{"script":"const orgName = \"Boss Loot\";\nconst itemName = \"Death Kiss Blade\";\nconst featName = \"Death Kiss Attack (Active Ability)\";\nconst myItems = actor.items;\nlet featExists = false;\n\nmyItems.forEach(function (item) {\n  if (item.name === featName && item.type === \"feat\") {\n    console.log(`${orgName} | A feature with name ${featName} already exists!`);\n    featExists = true;\n  }\n});\n\nif (featExists) {\n  return;\n}\n\nconst artWorkChatTitle = \"modules/boss-loot-magic-items-free/artwork/009-death-kiss-blade/art-static-for-death-kiss-attack.webp\";\n\nconst deathKissFeat = {\n  name: featName,\n  type: \"feat\",\n  system: {\n    description: {\n      value:\n        '<p><span class=\"ryNqvb\"><strong>Death Kiss Attack (Active Ability)</strong>: </span><span class=\"ryNqvb\">As an action you can perform this attack technique.</span> <span class=\"ryNqvb\">You move so fast that you can make a single melee attack on all enemies within 20 feet of you in an instant.</span></p>',\n      chat: \"\",\n      unidentified: \"\",\n    },\n    source: \"Death Kiss Blade\",\n    activation: {\n      type: \"action\",\n      cost: 1,\n      condition: \"\",\n    },\n    duration: {\n      value: \"1\",\n      units: \"turn\",\n    },\n    target: {\n      value: 20,\n      width: null,\n      units: \"ft\",\n      type: \"enemy\",\n    },\n    range: {\n      value: null,\n      long: null,\n      units: \"spec\",\n    },\n    uses: {\n      value: 1,\n      max: \"1\",\n      per: \"lr\",\n      recovery: \"\",\n    },\n    consume: {\n      type: \"\",\n      target: \"\",\n      amount: null,\n    },\n    ability: \"\",\n    actionType: \"mwak\",\n    attackBonus: \"1\",\n    chatFlavor: \"\",\n    critical: {\n      threshold: null,\n      damage: \"\",\n    },\n    damage: {\n      parts: [[\"1d8 + @mod + 1\", \"slashing\"]],\n      versatile: \"\",\n    },\n    formula: \"\",\n    save: {\n      ability: \"\",\n      dc: null,\n      scaling: \"spell\",\n    },\n    type: {\n      value: \"\",\n      subtype: \"\",\n    },\n    requirements: \"\",\n    recharge: {\n      value: null,\n      charged: false,\n    },\n  },\n  img: artWorkChatTitle,\n  effects: [],\n  folder: null,\n  sort: 0,\n  ownership: {\n    default: 0,\n  },\n  flags: {\n    \"midi-qol\": {\n      fumbleThreshold: null,\n      effectActivation: false,\n      onUseMacroName: \"[postAttackRoll]ItemMacro\",\n    },\n    midiProperties: {\n      nodam: false,\n      fulldam: false,\n      halfdam: false,\n      rollOther: false,\n      critOther: false,\n      magicdam: false,\n      magiceffect: false,\n      concentration: false,\n      toggleEffect: false,\n      autoFailFriendly: false,\n      offHandWeapon: false,\n      ignoreTotalCover: false,\n      autoSaveFriendly: false,\n    },\n    itemacro: {\n      macro: {\n        name: \"Death Kiss Attack (Active Ability)\",\n        type: \"script\",\n        scope: \"global\",\n        command:\n          'const orgName = \"Boss Loot\";\\nconst swordName = \"Death Kiss Blade\";\\nconst info = args[0];\\nconst targets = info.targets;\\nconst chatMessage = game.messages.get(info.itemCardId);\\nconst chatMessageContent = chatMessage.content;\\nconst textToAppend = \\'<hr><img src=\"modules/boss-loot-magic-items-free/artwork/009-death-kiss-blade/art-animated-for-chat-death-kiss-blade.gif\" width=\"272\" height=\"272\"/>\\';\\n\\nif (targets.length === 0) {\\n  console.log(`${orgName} | No hits`);\\n  return;\\n}\\n\\nconst parser = new DOMParser();\\nconst doc = parser.parseFromString(chatMessageContent, \"text/html\");\\nconst cardContent = doc.querySelector(\".card-content\");\\ncardContent.insertAdjacentHTML(\"beforeend\", textToAppend);\\nconst result = doc.documentElement.outerHTML;\\nchatMessage.content = result;\\nawait chatMessage.update({ content: result });\\n\\ntargets.unshift(token.document);\\n\\nconst seq = new Sequence();\\n\\nfor (let t = 0; t < targets.length; t++) {\\n  if (t == targets.length - 1) {\\n    break;\\n  }\\n  console.log(`${orgName} | Now attacking ${targets[t + 1].name}`);\\n\\n  await seq\\n    .animation()\\n    .on(token)\\n    .fadeOut(150)\\n\\n    .effect()\\n    .file(\"jb2a.gust_of_wind.veryfast\")\\n    //.template({ gridSize: 10, startPoint: 10, endPoint: 10 })\\n    .endTime(380)\\n    .filter(\"ColorMatrix\", { hue: 115 })\\n    .atLocation(targets[t], { cacheLocation: true })\\n    .stretchTo(targets[t + 1], { cacheLocation: true })\\n    .waitUntilFinished(-500)\\n\\n    .effect()\\n    .file(\"jb2a.greatsword.melee.standard.white\")\\n    .spriteScale(0.5)\\n    .randomRotation()\\n    //.randomizeMirrorY()\\n    .template({ gridSize: 200, startPoint: 200, endPoint: 200 })\\n    .timeRange(1400, 2000)\\n    .atLocation(targets[t + 1], { cacheLocation: true })\\n    .waitUntilFinished(-500);\\n}\\n\\nawait seq\\n  .effect()\\n  .file(\"jb2a.gust_of_wind.veryfast\")\\n  //.template({ gridSize: 200, startPoint: 100, endPoint: 100 })\\n  .endTime(380)\\n  .filter(\"ColorMatrix\", { hue: 115 })\\n  .atLocation(targets[targets.length - 1], { cacheLocation: true })\\n  .stretchTo(targets[0], { cacheLocation: true })\\n  .waitUntilFinished(-500)\\n\\n  .animation()\\n  .on(token)\\n  .fadeIn(100)\\n\\n  .effect()\\n  .file(\"jb2a.static_electricity.03.blue\")\\n  .filter(\"ColorMatrix\", { hue: 190 })\\n  .atLocation(token)\\n  .scaleToObject()\\n  .play();',\n        _id: null,\n        img: \"icons/svg/dice-target.svg\",\n        folder: null,\n        sort: 0,\n        ownership: {\n          default: 0,\n        },\n        flags: {},\n      },\n    },\n  },\n};\nactor.createEmbeddedDocuments(\"Item\", [deathKissFeat]);\n"},"onDisable":{"script":"const itemName = \"Death Kiss Blade\";\nconst featName = \"Death Kiss Attack (Active Ability)\";\n\nlet myItems = actor.items;\n\n// Remove the item from item list\nmyItems.forEach(function (item) {\n  item.name === featName && item.type === \"feat\" && actor.deleteEmbeddedDocuments(\"Item\", [item.id]);\n});\n"}}}}],"flags":{"core":{"sourceId":"Compendium.dnd5e.items.IPkf0XNowClwXnjQ"},"midi-qol":{"fumbleThreshold":null,"effectActivation":false,"onUseMacroName":"[postAttackRoll]ItemMacro"},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"autoFailFriendly":false,"offHandWeapon":false,"ignoreTotalCover":false,"autoSaveFriendly":false},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.5"},"itemacro":{"macro":{"name":"Death Kiss Blade v1","type":"script","scope":"global","command":"const orgName = \"Boss Loot\";\nconst info = args[0];\nlet targetTokens = info.targets;\n\nasync function hideDivFromChatMessage(cardId, className) {\n  const chatMessage = game.messages.get(cardId);\n  const tempDiv = document.createElement(\"div\");\n  tempDiv.innerHTML = chatMessage.content;\n\n  const midiQolSavesDisplay = tempDiv.querySelector(className);\n  midiQolSavesDisplay?.classList.add(\"hidden\");\n\n  console.log(`${orgName} | Add class hidden to Saves Display in ChatMessage with id ${cardId}`);\n  await chatMessage.update({ content: tempDiv.innerHTML });\n}\n\nif (targetTokens.length !== 1) {\n  console.log(`${orgName} | Please select one target`);\n  ui.notifications.warn(`Please select one target!`);\n  await hideDivFromChatMessage(info.itemCardId, \".card-buttons\");\n  return;\n}\n\n[target] = targetTokens;\n\nnew Sequence()\n  .effect()\n  .file(\"jb2a.greatsword.melee.standard.white\")\n  // modules/JB2A_DnD5e/Library/Generic/Weapon_Attacks/Melee/GreatSword01_01_Regular_White_800x600.webm\n  .atLocation(token)\n  .stretchTo(target)\n  .template({ gridSize: 200, startPoint: 200, endPoint: 200 })\n  .timeRange(1400, 2500)\n  .play();","author":"Iz3BYZWrVGwLMHiJ","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}},"scene-packer":{"sourceId":"Item.lvjWAghFICcUtQ0g"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1661787233572,"modifiedTime":1682613581154,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"lCOB8K8gXKy2YCcX","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
{"name":"Helm of the Charging Bull v1","type":"equipment","img":"modules/boss-loot-magic-items-free/artwork/011-helm-of-the-charging-bull/art-static-helm-of-the-charging-bull.webp","system":{"description":{"value":"<h4><em>Wondrous item, (requires attunement)</em></h4><div class=\"block purple\" id=\" \" style=\"background:#aa88aa55\"><h4><em>\"A symbol of strength and courage, those who have been fortunate enough to experience its power have found themselves unstoppable on the battlefield, charging forward with a strength and vigor unmatched by all others.”</em></h4></div><hr /><h4>This ancient magical helm is made of a shimmering, silver metal, with two large horns extending out of the sides. It is adorned with intricate carvings of ancient symbols and runes, giving it a mysterious and intimidating look. When worn, it grants its wielder the power to charge at a target and knock them to the ground with a powerful shockwave.</h4><p>With a mighty shout, you use your move action and charge at least 20 feet to the target. Then as an action make a Strength saving throw attack. The target must make a Dexterity save with a DC equal to 10 plus your Strength modifier. On a fail save, the creature takes [[/r 4d4]] bludgeoning damage, is thrown through the air 15 feet back, is knocked @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.y0TkcdyoZlOTmAFT]{Prone} and is @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated} until the end of its next turn. If the save succeeds, it takes half the damage and it will not be thrown through the air.</p><p>This item has 2 charges. It regains expended charges after a long rest.</p><img src=\"modules/boss-loot-magic-items-free/artwork/011-helm-of-the-charging-bull/art-static-helm-of-the-charging-bull.webp\" alt=\"Helm of the Charging Bull\" /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":2,"price":{"value":0,"denomination":"gp"},"attunement":1,"equipped":false,"rarity":"veryRare","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":1,"width":null,"units":"ft","type":"radius"},"range":{"value":30,"long":30,"units":"ft"},"uses":{"value":2,"max":"2","per":"lr","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"str","actionType":"save","attackBonus":"","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["4d4 + @mod","bludgeoning"]],"versatile":""},"formula":"","save":{"ability":"dex","dc":null,"scaling":"str"},"armor":{"value":null,"type":"clothing","dex":null},"hp":{"value":null,"max":null,"dt":null,"conditions":""},"baseItem":"","speed":{"value":null,"conditions":""},"strength":null,"stealth":false,"proficient":true},"effects":[],"flags":{"scene-packer":{"hash":"4aeb3a35464509be34827a72403e8998fd275c45","sourceId":"Item.vZ6nm606V10fvSiz"},"midi-qol":{"fumbleThreshold":null,"effectActivation":false,"onUseMacroName":"[postSave]ItemMacro,[templatePlaced]ItemMacro"},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.5"},"itemacro":{"macro":{"name":"Helm of the Charging Bull v1","type":"script","scope":"global","command":"const orgName = \"Boss Loot\";\nconst itemName = \"Helm of the Charging Bull\";\nconst info = args[0];\nconst targetTokens = info.targets;\nconst targetUuid = info.targetUuids;\nconst usesCount = info.itemData.system.uses.value;\nconst permittedSize = [\"tiny\", \"sm\", \"med\"];\nconst artWorkChatTitle = \"modules/boss-loot-magic-items-free/artwork/011-helm-of-the-charging-bull/art-static-helm-of-the-charging-bull.webp\";\nconst artWorkChatCardChargingBull = \"modules/boss-loot-magic-items-free/artwork/011-helm-of-the-charging-bull/art-animated-for-chat-helm-of-the-charging-bull.gif\";\n\n//------------------------\n// F U N C T I O N S\n//-----------\nasync function returnOneUse() {\n  await actor.items.get(info.item._id).update({ \"system.uses.value\": usesCount + 1 });\n}\n\nasync function createChatMessage(summary, msg, img = true) {\n  const artwork = img ? `<img src=${artWorkChatCardChargingBull} title=${itemName} width=\"272\" height=\"272\" />` : \"\";\n  const chatChainhookBracer = {\n    content: `\n  <div class=\"dnd5e chat-card item-card midi-qol-item-card\">\n    <header class=\"card-header flexrow\">\n      <img src=${artWorkChatTitle} title=\"${itemName}\" width=\"72\" height=\"72\" />\n      <h3 class=\"item-name\">${itemName} ${summary}</h3>\n    </header>\n    <div class=\"card-content\">\n      ${msg}\n    </div>\n    <hr>\n      ${artwork}\n    <footer class=\"card-footer\"><span>${itemName}</span></footer>\n  </div>`,\n    type: CONST.CHAT_MESSAGE_TYPES.OOC,\n  };\n  await ChatMessage.create(chatChainhookBracer);\n}\n\nasync function hideDivFromChatMessage(cardId, className) {\n  const chatMessage = game.messages.get(cardId);\n  const tempDiv = document.createElement(\"div\");\n  tempDiv.innerHTML = chatMessage.content;\n\n  const midiQolSavesDisplay = tempDiv.querySelector(className);\n  midiQolSavesDisplay?.classList.add(\"hidden\");\n\n  console.log(`${orgName} | Add class hidden to Saves Display in ChatMessage with id ${cardId}`);\n  await chatMessage.update({ content: tempDiv.innerHTML });\n}\n\nfunction thrownToken(chargingToken, targetToken) {\n  const newDistance = 300;\n  const gridSize = canvas.scene.grid.size;\n  const targetTokenCenter = targetToken.center; // compute only once the center\n\n  // From token to target\n  const ray1 = new Ray(chargingToken.center, targetTokenCenter);\n  const originalDistance = ray1.distance;\n  const ratio = newDistance / originalDistance;\n\n  // From target to the new position\n  const ray2 = new Ray({ x: ray1.B.x, y: ray1.B.y }, { x: ray1.B.x + ray1.dx * ratio, y: ray1.B.y + ray1.dy * ratio });\n\n  // Check collision\n  const collisionSettings = { mode: \"universal\", type: \"move\" }; // mode: universal\n  const collision = canvas.walls.checkCollision(ray2, collisionSettings);\n\n  let dx, dy, destPosition;\n  if (collision) {\n    dx = collision.x - targetTokenCenter.x;\n    dy = collision.y - targetTokenCenter.y;\n    console.log(`${orgName} | Collision detected, stopping the movement`);\n    let distanceX = dx > 0 ? Math.floor(dx / gridSize) * gridSize : Math.ceil(dx / gridSize) * gridSize;\n    let distanceY = dy > 0 ? Math.floor(dy / gridSize) * gridSize : Math.ceil(dy / gridSize) * gridSize;\n\n    destPosition = { x: targetToken.x + distanceX, y: targetToken.y + distanceY };\n  } else {\n    destPosition = canvas.grid.getSnappedPosition(ray2.B.x - targetToken.w / 2, ray2.B.y - targetToken.h / 2, 1);\n  }\n\n  return { x: destPosition.x, y: destPosition.y };\n}\n\nasync function chargeAnimation(chargingToken, targetToken) {\n  await new Sequence()\n    // Charge\n    .animation()\n    .on(chargingToken)\n    .moveTowards(targetToken, { ease: \"easeInOutBack\" })\n    .moveSpeed(15)\n    .waitUntilFinished(-300)\n    .closestSquare()\n    .effect()\n    .file(\"jb2a.wind_stream.white\")\n    // modules/JB2A_DnD5e/Library/Generic/Wind/WindStreams_01_White_20OPA_1200x1200.webm\n    .timeRange(0, 400)\n    .atLocation(chargingToken, { cacheLocation: true })\n    .stretchTo(targetToken, { cacheLocation: true })\n    .scale({ x: 1, y: 0.2 })\n    .belowTokens()\n    .play();\n}\n\nasync function thrownAnimation(chargingToken, targetPosition) {\n  await new Sequence()\n    //Start dust under token\n    .effect()\n    .file(\"jb2a.smoke.puff.ring.01.white.0\")\n    // modules/JB2A_DnD5e/Library/Generic/Smoke/SmokePuffRing01_01_Regular_White_400x400.webm\n    .atLocation(chargingToken)\n    .scaleToObject(1.75)\n    .belowTokens()\n    .waitUntilFinished(-1000)\n    //Turn token invisible\n    .animation()\n    .on(chargingToken)\n    .opacity(0)\n    .teleportTo(targetPosition)\n    //Token jump\n    .effect()\n    .from(chargingToken)\n    .atLocation(chargingToken)\n    .scale(1.5)\n    .scaleIn({ x: 0.5, y: 0.5 }, 250, { ease: \"easeOutCubic\" })\n    .scaleOut({ x: 0.5, y: 0.5 }, 450, { ease: \"easeInCubic\" })\n    .opacity(1)\n    .duration(800)\n    .anchor({ x: 0.5, y: 0.5 })\n    .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 800, ease: \"easeOutQuad\" })\n    .moveTowards(targetPosition, { rotate: false, ease: \"easeOutSine\" })\n    .zIndex(2)\n    //Token shadow\n    .effect()\n    .from(chargingToken)\n    .atLocation(chargingToken)\n    .opacity(0.5)\n    .scale(0.9)\n    //.belowTokens()\n    .duration(800)\n    .anchor({ x: 0.5, y: 0.1 })\n    .filter(\"ColorMatrix\", { brightness: -1 })\n    .filter(\"Blur\", { blurX: 5, blurY: 10 })\n    .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 800, ease: \"easeOutCirc\" })\n    .moveTowards(targetPosition, { rotate: false, ease: \"easeOutSine\" })\n    .zIndex(2)\n    .waitUntilFinished(-100)\n    //End dust under token\n    .effect()\n    .file(\"jb2a.smoke.puff.ring.01.white.2\")\n    // modules/JB2A_DnD5e/Library/Generic/Smoke/SmokePuffRing01_03_Regular_White_400x400.webm\n    .atLocation(chargingToken)\n    .scaleToObject(1.75)\n    .effect()\n    .file(\"jb2a.smoke.puff.ring.01.white.1\")\n    // modules/JB2A_DnD5e/Library/Generic/Smoke/SmokePuffRing01_02_Regular_White_400x400.webm\n    .atLocation(chargingToken)\n    .effect()\n    .file(\"jb2a.smoke.puff.side.02.white.0\")\n    // modules/JB2A_DnD5e/Library/Generic/Smoke/SmokePuffSide02_01_Regular_White_400x400.webm\n    .atLocation(chargingToken)\n    .rotateTowards(chargingToken, { rotationOffset: 180, cacheLocation: true })\n    .scaleToObject(2.5)\n    //Turn token visible\n    .animation()\n    .on(chargingToken)\n    .opacity(1)\n    .delay(200)\n    .play();\n}\n\n//------------------------\n// P R E - C H E C K S\n//-----------\nif (info.macroPass === \"templatePlaced\") {\n  // Delete the Template\n  await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [info.templateId]);\n\n  if (actor.system.abilities.str.value < 16) {\n    await returnOneUse();\n    console.log(`${orgName} | Not enough strength`);\n    ui.notifications.warn(`Not enough strength!`);\n    await hideDivFromChatMessage(info.itemCardId, \".card-buttons\");\n    return;\n  }\n\n  if (targetTokens.length !== 1) {\n    await returnOneUse();\n    console.log(`${orgName} | Please select one target`);\n    ui.notifications.warn(`Please select one target!`);\n    await hideDivFromChatMessage(info.itemCardId, \".card-buttons\");\n    return;\n  }\n\n  if (targetUuid && targetUuid.includes(token.document.uuid)) {\n    await returnOneUse();\n    console.log(`${orgName} | Cannot use the item ${itemName} on yourself`);\n    ui.notifications.warn(`Cannot use the item ${itemName} on yourself!`);\n    await hideDivFromChatMessage(info.itemCardId, \".card-buttons\");\n    return;\n  }\n\n  // Check the distance\n  const [targetToken] = targetTokens; // TokenDocument\n  const ray = new Ray({ x: token.x, y: token.y }, { x: targetToken.x, y: targetToken.y });\n  const [distanceFeet] = canvas.grid.measureDistances([{ ray }], { gridSpaces: true });\n\n  if (distanceFeet < 20) {\n    await returnOneUse();\n    console.log(`${orgName} | You need  to charge at least 20 feet to the target`);\n    ui.notifications.warn(`You need  to charge at least 20 feet to the target`);\n    await hideDivFromChatMessage(info.itemCardId, \".card-buttons\");\n    return;\n  }\n}\n\n//------------------------\n// M A I N\n//-----------\nif (info.macroPass === \"postSave\") {\n  const target = info.workflow.targets.values().next().value;\n\n  // Do the magic\n  const newTargetLoc = thrownToken(token, target);\n\n  if (info.workflow.failedSaves.size === 0) {\n    const message = `<p>With a mighty shout, you charge towards your foe. The runes of the helm begin to glow with an otherworldly energy. As you collide with your enemy, a powerful shockwave is released from the helm, but your enemy manages to react quickly, rolling out of the way to avoid the full force of the impact. The enemy takes half the damage, manages to stay on its feet and ready to counterattack.</p>`;\n    createChatMessage(\"FAIL\", message);\n    await chargeAnimation(token, target);\n  } else {\n    // Target failed the Saving Throw\n    const message = `<p>With a mighty shout, you charge towards your foe. The runes of the helm begin to glow with an otherworldly energy. As you collide with your enemy, a powerful shockwave is released from the helm, sending them flying through the air with a force that knocks them to the ground. The enemy is thrown 15 feet back, knocked @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.y0TkcdyoZlOTmAFT]{Prone}, and is left @UUID[Compendium.dnd5e.rules.w7eitkpD7QQTB6j0.JournalEntryPage.TpkZgLfxCmSndmpb]{Incapacitated}, unable to move or act until the end of its next turn.</p>`;\n    createChatMessage(\"SUCCESS\", message);\n    await chargeAnimation(token, target);\n    await thrownAnimation(target, newTargetLoc);\n\n    // Customize drefs effects\n    const proneEffectData = game.dfreds.effectInterface.findEffectByName(\"Prone\").toObject();\n    proneEffectData.flags.dae = {\n      transfer: false,\n      specialDuration: [\"turnEnd\"],\n      stackable: \"multi\",\n      macroRepeat: \"none\",\n    };\n    const incapacitatedEffectData = game.dfreds.effectInterface.findEffectByName(\"Incapacitated\").toObject();\n    incapacitatedEffectData.flags.dae = {\n      transfer: false,\n      specialDuration: [\"turnEnd\"],\n      stackable: \"multi\",\n      macroRepeat: \"none\",\n    };\n\n    await game.dfreds.effectInterface.addEffectWith({ effectData: proneEffectData, uuid: targetUuid[0] });\n    await game.dfreds.effectInterface.addEffectWith({ effectData: incapacitatedEffectData, uuid: targetUuid[0] });\n  }\n}","author":"Iz3BYZWrVGwLMHiJ","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1673799913479,"modifiedTime":1682265145080,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"q6kvEldELx8e4bbS","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
{"name":"Destabilizator (Warhammer) v1","type":"weapon","img":"modules/boss-loot-magic-items-free/artwork/007-destabilizator/art-static-destabilizator.webp","system":{"description":{"value":"<p><em>Weapon (warhammer), rare (requires attunement)</em></p><div class=\"block purple\" id=\" \" style=\"background:#aa88aa55\"><h4><em>As the enemy approached, Captain Abelard raised his warhammer, with a determined look on his face. \"You'll not be getting any closer, friend,\" he said with a smirk. The enemy charged forward, only to be knocked back with a sudden force. \"What was that?\" they cried, holding their head. \"Oh, just a little something I call Distanceectomy,\" replied Abelard, winking. \"It has a way of keeping people from getting too close.”</em></h4></div><hr /><p>The hammerhead is crafted in the shape of two palm hands in a stop position, as if halting the enemy in their tracks. In the center of the hammer's head rests a precious gemstone, radiating a faint and mesmerizing purple hue that seems to shift and change with the light. The handle of the hammer is made from a rare, black wood, which seems to absorb light, giving it a dark appearance.</p><p>You gain a +1 bonus to attack and damage rolls made with this magic weapon.</p><p>This warhammer requires 16 Strength or higher to wield.</p><hr /><p><strong>Destabilizing Attack (Passive Ability)</strong>: every time you hit with this hammer, and if the target size is Tiny, Small, Medium or Large, it must make a DC 15 Strength saving throw. On a failed save, you push the target 5 feet away from you and it takes [[/r 1d8]] force damage, on a successful save the target only take half of the force damage and it is not pushed away.</p><hr /><img src=\"modules/boss-loot-magic-items-free/artwork/007-destabilizator/art-static-destabilizator.webp\" alt=\"Destabilizator\" /><section class=\"secret\" id=\"secret\"><h3><span style=\"text-decoration:underline\"><strong><span style=\"text-decoration:underline\">Very Important:</span></strong></span></h3><h4>Check Boss Loot Journal for mechanics and other goodies.</h4></section>","chat":"","unidentified":""},"source":"Boss Loot","quantity":1,"weight":4,"price":{"value":0,"denomination":"gp"},"attunement":2,"equipped":true,"rarity":"rare","identified":true,"activation":{"type":"action","cost":1,"condition":""},"duration":{"value":"","units":""},"cover":null,"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":5,"long":null,"units":"ft"},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"mwak","attackBonus":"1","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["1d8 + @mod + 1","bludgeoning"]],"versatile":"1d10 + @mod + 1"},"formula":"1d8[force]","save":{"ability":"str","dc":15,"scaling":"flat"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"martialM","baseItem":"warhammer","properties":{"ada":false,"amm":false,"fin":false,"fir":false,"foc":false,"hvy":false,"lgt":false,"lod":false,"mgc":true,"rch":false,"rel":false,"ret":false,"sil":false,"spc":false,"thr":false,"two":false,"ver":true},"proficient":false},"effects":[],"flags":{"magicitems":{"enabled":false,"equipped":false,"attuned":false,"charges":"0","chargeType":"c1","destroy":false,"destroyFlavorText":"reaches 0 charges: it crumbles into ashes and is destroyed.","rechargeable":false,"recharge":"0","rechargeType":"t1","rechargeUnit":"r1","sorting":"l"},"midi-qol":{"fumbleThreshold":null,"effectActivation":false,"onUseMacroName":"[postSave]ItemMacro"},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false,"autoFailFriendly":false,"offHandWeapon":false,"autoSaveFriendly":false},"exportSource":{"world":"testing-1","system":"dnd5e","coreVersion":"10.291","systemVersion":"2.1.5"},"itemacro":{"macro":{"name":"Destabilizator (Warhammer) v1","type":"script","scope":"global","command":"const orgName = \"Boss Loot\";\nconst strLimit = 16;\nconst pushDistance = 1;\nconst abilityName = \"Destabilizing Attack\";\nconst permittedSize = [\"tiny\", \"sm\", \"med\", \"lg\"];\nconst artWorkChatTitle = \"modules/boss-loot-magic-items-free/artwork/007-destabilizator/art-static-destabilizator.webp\";\nconst artWorkPushEffect = \"modules/boss-loot-magic-items-free/artwork/007-destabilizator/art-satic-destabilizing-attack-effect.webp\";\nconst artWorkChatCardPushEffect = \"modules/boss-loot-magic-items-free/artwork/007-destabilizator/art-animated-for-chat-destabilizator.gif\";\n\nconst info = args[0];\nconst actorStr = actor.system.abilities.str.value;\n\n//------------------------\n// F U N C T I O N S\n//-----------\nasync function createChatMessage(summary, msg, img = true) {\n  const artwork = img ? `<img src=${artWorkChatCardPushEffect} title=${abilityName} width=\"272\" height=\"272\" />` : \"\";\n  const chatDestabilizingAttack = {\n    content: `\n    <div class=\"dnd5e chat-card item-card midi-qol-item-card\">\n      <header class=\"card-header flexrow\">\n        <img src=${artWorkChatTitle} title=\"${abilityName}\" width=\"36\" height=\"36\" />\n        <h3 class=\"item-name\">${abilityName} ${summary}</h3>\n      </header>\n      <div class=\"card-content\">\n        ${msg}\n      </div>\n      <hr>\n        ${artwork}\n      <footer class=\"card-footer\"><span>${abilityName}</span></footer>\n    </div>`,\n    type: CONST.CHAT_MESSAGE_TYPES.OOC,\n  };\n  await ChatMessage.create(chatDestabilizingAttack);\n}\n\n//------------------------\n// Pre-Checks\n//-----------\nif (info.targets.length === 0 || info.targetUuids.length === 0) {\n  console.log(`${orgName} | No targets`);\n  return;\n}\n\nif (info.failedSaveUuids.length === 0) {\n  console.log(`${orgName} | Saving throw succeded`);\n}\n\nif (info.item.system.attunement !== CONFIG.DND5E.attunementTypes.ATTUNED) {\n  ui.notifications.warn(`You cannot use <strong>${abilityName}</strong> without attunement!`);\n  return;\n}\n\nif (actorStr < strLimit) {\n  ui.notifications.warn(`You don't have enough STR to use <strong>${abilityName}!</strong>`);\n  return;\n}\n\n//------------------------\n// M A I N\n//-----------\nconst [target] = info.targets; // TokenDocument5e\nconst [targetToken] = info.workflow.targets; // Token\nconst targetSize = target._actor.system?.traits?.size;\nconst targetName = target.name;\nconst [targetUuid] = info.targetUuids;\nconst gridSize = canvas.scene.grid.size; // 100 pixels\n\n// Coordinates\n// const myToken = token; // Token\nconst myTokenPos = { x: token.document.x, y: token.document.y };\nconst myTokenCenter = { x: myTokenPos.x + Math.floor(gridSize / 2), y: myTokenPos.y + Math.floor(gridSize / 2) }; // point (x,y)\n// const targetPos = { x: target.x, y: target.y };\nconst targetCenterPos = { x: target.x + Math.floor(gridSize / 2), y: target.y + Math.floor(gridSize / 2) }; // point (x,y)\n\n// Determine target new position\nconst ray = new Ray(myTokenCenter, targetCenterPos);\n\nconst targetNewPossiblePos = [{ x: targetCenterPos.x + pushDistance * ray.dx, y: targetCenterPos.y + pushDistance * ray.dy }];\nif (ray.slope === 1 || ray.slope === -1) {\n  targetNewPossiblePos.push({ x: targetCenterPos.x + pushDistance * ray.dx, y: targetCenterPos.y });\n  targetNewPossiblePos.push({ x: targetCenterPos.x, y: targetCenterPos.y + pushDistance * ray.dy });\n}\n\nlet targetNewPos = {};\n\n// Check collision in all posible positions\nfor (let i = 0; i < targetNewPossiblePos.length; i++) {\n  // Check if the target new position it's free\n  const ray = new Ray(targetCenterPos, targetNewPossiblePos[i]);\n  // Check collision\n  const collisionSettings = { mode: \"any\", type: \"move\" }; // mode: universal\n  const collision = canvas.walls.checkCollision(ray, collisionSettings);\n\n  if (!collision) {\n    // Normalize the token pos\n    targetNewPos = { x: targetNewPossiblePos[i].x - Math.floor(gridSize / 2), y: targetNewPossiblePos[i].y - Math.floor(gridSize / 2) };\n    break;\n  }\n}\n\n// Check for success\nconst isProperSize = permittedSize.includes(targetSize.toLowerCase());\nconst pushTarget = info.failedSaveUuids.length > 0 && isProperSize && Object.keys(targetNewPos).length > 0;\nconst messageTop = pushTarget ? \"Success\" : \"Failed\";\nlet messageBot = `<p>You have used ${abilityName} on <strong>${targetName}</strong>`;\nif (pushTarget) {\n  messageBot += \" and push the target 5 feet away from you.</p>\";\n} else if (info.failedSaveUuids.length === 0) {\n  messageBot += \", you struggle to push the target but it manage to evade your devastating blow.</p>\";\n} else if (isProperSize) {\n  messageBot += \", you struggle to push the target but it is something in the way!</p>\";\n} else {\n  messageBot += \", you struggle to push the target but it's too big for you!</p>\";\n}\n\n//------------------------\n// P U S H   T A R G E T\n//-----------\nconst pushEffect = {\n  label: `${abilityName} Effect (Temporary Effect)`,\n  icon: artWorkPushEffect,\n  duration: {\n    rounds: null,\n    startTime: null,\n    seconds: 1,\n    combat: null,\n    turns: null,\n    startRound: null,\n    startTurn: null,\n  },\n  disabled: false,\n  changes: [],\n  tint: null,\n  transfer: false,\n  flags: {\n    \"times-up\": {},\n    dae: {\n      selfTarget: false,\n      selfTargetAlways: false,\n      stackable: \"none\",\n      durationExpression: \"\",\n      macroRepeat: \"none\",\n      specialDuration: [],\n    },\n    core: {\n      statusId: \"\",\n    },\n    effectmacro: {\n      onCreate: {\n        script: `const myToken = arguments[0];\\nconst myTokenId = myToken.document._id;\\nconst newTokenPos = [{ _id: myTokenId, x: ${targetNewPos?.x}, y: ${targetNewPos?.y} }];\\nawait canvas.scene.updateEmbeddedDocuments(\"Token\", newTokenPos, { animate: true });`,\n      },\n    },\n  },\n};\n\nif (pushTarget) {\n  await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: targetUuid, effects: [pushEffect] });\n}\n\nawait createChatMessage(messageTop, messageBot, true);\n\nlet sequence = new Sequence()\n  .effect()\n  .file(\"jb2a.side_impact.part.shockwave.blue\")\n  // modules/JB2A_DnD5e/Library/Generic/Impact/PartSideImpactShockwave01_01_Regular_Blue_600x600.webm\n  .atLocation(targetToken)\n  .attachTo(token, { followRotation: false })\n  .rotateTowards(targetToken, { attachTo: true })\n  .scale(0.3)\n  .delay(-7000)\n\n  .effect()\n  .file(\"jb2a.impact.006.yellow\")\n  // modules/JB2A_DnD5e/Library/Generic/Impact/Impact_06_Regular_Yellow_400x400.webm\n  .atLocation(targetToken)\n  .scaleToObject(2)\n  .delay(0)\n  .waitUntilFinished(-2000)\n\n  .effect()\n  .file(\"jb2a.impact.ground_crack.orange.01\")\n  // modules/JB2A_DnD5e/Library/Generic/Impact/GroundCrackImpact_01_Regular_Orange_600x600.webm\n  .filter(\"ColorMatrix\", { brightness: 1, contrast: 0 })\n  .template({ gridSize: 200, startPoint: 200, endPoint: 200 })\n  .atLocation(targetToken)\n  .scaleToObject(2)\n  .delay(10)\n  .fadeOut(1000)\n  .belowTokens()\n\n  .play();","author":"Iz3BYZWrVGwLMHiJ","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}},"core":{"sourceId":"Item.wNIt8U0LDDuoJ6Ii"},"favtab":{"isFavorite":false}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1670011731655,"modifiedTime":1682265137314,"lastModifiedBy":"Iz3BYZWrVGwLMHiJ"},"_id":"wdZCfeGoKeRQzd7O","folder":null,"sort":0,"ownership":{"default":0,"Iz3BYZWrVGwLMHiJ":3}}
